openapi: 3.0.3
info:
  title: سامانه جامع ردیابی قطعات و شناسنامه آسانسور
  description: |
    ## درباره سیستم
    
    سامانه جامع ردیابی قطعات و شناسنامه آسانسور یک پلتفرم کامل برای مدیریت چرخه حیات قطعات آسانسور و ایجاد شناسنامه دیجیتال برای آسانسورها است.
    
    ### ویژگی‌های کلیدی:
    - **احراز هویت امن**: سیستم OTP با پشتیبانی از Captcha
    - **مدیریت قطعات هوشمند**: دسته‌بندی پویا، مشخصات فنی تخصصی، QR کد
    - **ردیابی انتقال‌ها**: سیستم کامل ردیابی مالکیت و انتقال قطعات
    - **شناسنامه آسانسور**: ایجاد شناسنامه دیجیتال با QR کد قابل تایید
    - **مدیریت درخواست‌ها**: سیستم تیکتینگ و پشتیبانی
    - **گزارش‌گیری پیشرفته**: آمار و تحلیل‌های مالی و عملیاتی
    - **پنل‌های تخصصی**: پنل ادمین و کاربر با سطوح دسترسی مختلف
    
    ### امنیت و انطباق:
    - احراز هویت JWT با Refresh Token
    - رمزگذاری داده‌های حساس
    - سیستم دسترسی نقش‌محور (RBAC)
    - پشتیبانی از استانداردهای امنیتی
    
    ### پشتیبانی از استانداردهای ایرانی:
    - تقویم شمسی
    - استان‌ها و شهرهای ایران (31 استان، 419+ شهر)
    - واحدهای ایرانی (ریال، کیلوگرم، متر)
    - زبان فارسی و RTL
    
  version: 1.0.0
  contact:
    name: تیم توسعه سامانه
    url: https://elevatorid.ieeu.ir
    email: support@ieeu.ir
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  
servers:
  - url: https://elevatorid.ieeu.ir/v1
    description: سرور اصلی (Production)
  - url: https://staging.elevatorid.ieeu.ir/v1  
    description: سرور تست (Staging)
  - url: http://localhost:3000/v1
    description: سرور محلی (Development)

security:
  - BearerAuth: []

tags:
  - name: Authentication
    description: احراز هویت و مدیریت نشست
  - name: Users
    description: مدیریت کاربران
  - name: Parts
    description: مدیریت قطعات
  - name: Transfers
    description: مدیریت انتقال‌ها
  - name: Elevators
    description: مدیریت آسانسورها
  - name: Requests
    description: درخواست‌ها و شکایات
  - name: Reports
    description: گزارش‌گیری
  - name: Dashboard
    description: داشبورد و آمار
  - name: Profile
    description: پروفایل کاربری
  - name: Settings
    description: تنظیمات سیستم
  - name: Upload
    description: آپلود فایل‌ها
  - name: Geography
    description: اطلاعات جغرافیایی

paths:
  # =============================================================================
  # Authentication APIs
  # =============================================================================
  /auth/send-otp:
    post:
      tags: [Authentication]
      summary: ارسال کد OTP
      description: |
        ارسال کد تایید (OTP) به شماره موبایل کاربر برای ورود به سیستم
        
        ### فرآیند احراز هویت:
        1. کاربر شماره موبایل و کد امنیتی (CAPTCHA) را وارد می‌کند
        2. سیستم کد 6 رقمی OTP ارسال می‌کند (SMS)
        3. مدت اعتبار کد: 5 دقیقه
        4. حداکثر 3 بار درخواست در 24 ساعت
        
        ### نکات امنیتی:
        - CAPTCHA برای جلوگیری از حملات اتوماسیون
        - محدودیت نرخ درخواست (Rate Limiting)
        - لاگ تمام تلاش‌های ورود
        
        ### مثال استفاده:
        ```json
        {
          "mobile": "09123456789",
          "captcha": "abc123"
        }
        ```
      operationId: sendOtp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [mobile]
              properties:
                mobile:
                  type: string
                  pattern: '^09[0-9]{9}

  /auth/verify-otp:
    post:
      tags: [Authentication]
      summary: تایید کد OTP
      description: تایید کد OTP و دریافت توکن دسترسی
      operationId: verifyOtp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [otpToken, otp]
              properties:
                otpToken:
                  type: string
                  example: "temp_token_12345"
                otp:
                  type: string
                  pattern: '^[0-9]{6}$'
                  example: "123456"
      responses:
        '200':
          description: ورود موفق
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken:
                    type: string
                    example: "refresh_token_12345"
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/refresh:
    post:
      tags: [Authentication]
      summary: تمدید توکن
      description: تمدید توکن دسترسی با استفاده از refresh token
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refreshToken]
              properties:
                refreshToken:
                  type: string
                  example: "refresh_token_12345"
      responses:
        '200':
          description: توکن تمدید شد
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken:
                    type: string
                    example: "new_refresh_token_12345"

  /auth/logout:
    post:
      tags: [Authentication]
      summary: خروج از سیستم
      description: خروج کاربر و باطل کردن توکن‌ها
      operationId: logout
      responses:
        '200':
          description: خروج موفق
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "با موفقیت خارج شدید"

  # =============================================================================
  # Dashboard APIs
  # =============================================================================
  /dashboard/admin/stats:
    get:
      tags: [Dashboard]
      summary: آمار داشبورد ادمین
      description: دریافت آمار کلی برای داشبورد ادمین
      operationId: getAdminDashboardStats
      responses:
        '200':
          description: آمار داشبورد
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalUsers:
                    type: integer
                    example: 1250
                  totalParts:
                    type: integer
                    example: 15000
                  totalElevators:
                    type: integer
                    example: 850
                  totalTransfers:
                    type: integer
                    example: 3200
                  pendingRequests:
                    type: integer
                    example: 45
                  monthlyTransfers:
                    type: array
                    items:
                      type: object
                      properties:
                        month:
                          type: string
                          example: "1403/01"
                        count:
                          type: integer
                          example: 120
                  recentActivities:
                    type: array
                    items:
                      $ref: '#/components/schemas/Activity'

  /dashboard/user/stats:
    get:
      tags: [Dashboard]
      summary: آمار داشبورد کاربر
      description: دریافت آمار شخصی برای داشبورد کاربر
      operationId: getUserDashboardStats
      responses:
        '200':
          description: آمار داشبورد کاربر
          content:
            application/json:
              schema:
                type: object
                properties:
                  myParts:
                    type: integer
                    example: 45
                  myElevators:
                    type: integer
                    example: 12
                  myTransfers:
                    type: integer
                    example: 67
                  pendingRequests:
                    type: integer
                    example: 3
                  recentTransfers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transfer'

  # =============================================================================
  # Users Management APIs
  # =============================================================================
  /users:
    get:
      tags: [Users]
      summary: لیست کاربران
      description: دریافت لیست کاربران با امکان فیلتر و جستجو
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Search'
        - name: role
          in: query
          schema:
            type: string
            enum: [admin, user, all]
            default: all
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, banned, all]
            default: all
        - name: province
          in: query
          schema:
            type: string
            example: "تهران"
      responses:
        '200':
          description: لیست کاربران
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUsers'

    post:
      tags: [Users]
      summary: ایجاد کاربر جدید
      description: ایجاد کاربر جدید توسط ادمین
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: کاربر ایجاد شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      tags: [Users]
      summary: جزئیات کاربر
      description: دریافت اطلاعات کامل یک کاربر
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: اطلاعات کاربر
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    put:
      tags: [Users]
      summary: ویرایش کاربر
      description: ویرایش اطلاعات کاربر توسط ادمین
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: کاربر ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    delete:
      tags: [Users]
      summary: حذف کاربر
      description: حذف کاربر از سیستم
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '204':
          description: کاربر حذف شد

  /users/{userId}/toggle-status:
    patch:
      tags: [Users]
      summary: تغییر وضعیت کاربر
      description: فعال/غیرفعال کردن کاربر
      operationId: toggleUserStatus
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [status]
              properties:
                status:
                  type: string
                  enum: [active, inactive, banned]
                reason:
                  type: string
                  example: "نقض قوانین"
      responses:
        '200':
          description: وضعیت تغییر کرد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  # =============================================================================
  # Parts Management APIs
  # =============================================================================
  /parts:
    get:
      tags: [Parts]
      summary: دریافت لیست قطعات
      description: |
        دریافت لیست قطعات با امکانات پیشرفته فیلتر، جستجو و مرتب‌سازی
        
        ### قابلیت‌های جستجو:
        - جستجو در نام، برند، مدل، شماره سریال
        - فیلتر بر اساس دسته‌بندی، وضعیت، مالک
        - فیلتر بر اساس بازه قیمت و تاریخ
        - مرتب‌سازی بر اساس فیلدهای مختلف
        
        ### مثال استفاده:
        ```
        GET /parts?search=موتور&status=available&minPrice=1000000&sort=createdAt:desc
        ```
      operationId: getParts
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Search'
        - name: categoryId
          in: query
          description: "فیلتر بر اساس شناسه دسته‌بندی"
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
        - name: category
          in: query
          description: "فیلتر بر اساس نام دسته‌بندی"
          schema:
            type: string
            example: "موتور"
        - name: brand
          in: query
          description: "فیلتر بر اساس برند"
          schema:
            type: string
            example: "اتیس"
        - name: manufacturer
          in: query
          description: "فیلتر بر اساس سازنده"
          schema:
            type: string
            example: "شرکت اتیس ایران"
        - name: status
          in: query
          description: "فیلتر بر اساس وضعیت قطعه"
          schema:
            type: string
            enum: [available, sold, installed, defective, under_repair, reserved, all]
            default: all
            example: "available"
        - name: condition
          in: query
          description: "فیلتر بر اساس شرایط فیزیکی"
          schema:
            type: string
            enum: [new, excellent, good, fair, poor, damaged, all]
            default: all
            example: "new"
        - name: ownerId
          in: query
          description: "فیلتر بر اساس شناسه مالک"
          schema:
            type: string
            format: uuid
            example: "456e7890-e89b-12d3-a456-426614174001"
        - name: locationProvince
          in: query
          description: "فیلتر بر اساس استان محل قرارگیری"
          schema:
            type: string
            example: "تهران"
        - name: locationCity
          in: query
          description: "فیلتر بر اساس شهر محل قرارگیری"
          schema:
            type: string
            example: "تهران"
        - name: minPrice
          in: query
          description: "حداقل قیمت (ریال)"
          schema:
            type: number
            format: decimal
            minimum: 0
            example: 1000000
        - name: maxPrice
          in: query
          description: "حداکثر قیمت (ریال)"
          schema:
            type: number
            format: decimal
            minimum: 0
            example: 50000000
        - name: hasWarranty
          in: query
          description: "فیلتر قطعات دارای گارانتی"
          schema:
            type: boolean
            example: true
        - name: manufacturingDateFrom
          in: query
          description: "تاریخ تولید از"
          schema:
            type: string
            format: date
            example: "1400-01-01"
        - name: manufacturingDateTo
          in: query
          description: "تاریخ تولید تا"
          schema:
            type: string
            format: date
            example: "1403-12-29"
        - name: tags
          in: query
          description: "فیلتر بر اساس برچسب‌ها (جدا شده با کاما)"
          schema:
            type: string
            example: "اولویت_بالا,وارداتی"
        - name: sort
          in: query
          description: "مرتب‌سازی (field:direction)"
          schema:
            type: string
            enum: [name:asc, name:desc, createdAt:asc, createdAt:desc, currentPrice:asc, currentPrice:desc, manufacturingDate:asc, manufacturingDate:desc]
            default: "createdAt:desc"
            example: "currentPrice:asc"
        - name: includeInactive
          in: query
          description: "شامل قطعات غیرفعال"
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: لیست قطعات دریافت شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedParts'
              examples:
                success_response:
                  summary: "پاسخ موفق"
                  value:
                    data:
                      - id: "550e8400-e29b-41d4-a716-446655440001"
                        name: "موتور آسانسور اتیس"
                        serialNumber: "SN123456789"
                        brand: "اتیس"
                        status: "available"
                        currentPrice: 18000000
                        currency: "IRR"
                        condition: "new"
                        categoryId: "123e4567-e89b-12d3-a456-426614174000"
                        ownerId: "456e7890-e89b-12d3-a456-426614174001"
                        createdAt: "2024-03-15T10:30:00Z"
                    meta:
                      page: 1
                      limit: 20
                      total: 150
                      totalPages: 8
                      hasNext: true
                      hasPrev: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

    post:
      tags: [Parts]
      summary: ثبت قطعه جدید
      description: |
        ثبت قطعه جدید در سیستم با اطلاعات کامل
        
        ### نکات مهم:
        - شماره سریال باید منحصر به فرد باشد
        - categoryId باید معتبر باشد
        - برای قطعات وارداتی، اطلاعات گمرکی الزامی است
        - QR کد به صورت خودکار تولید می‌شود
        
        ### مثال استفاده:
        ```json
        {
          "name": "موتور آسانسور اتیس",
          "serialNumber": "SN123456789",
          "categoryId": "123e4567-e89b-12d3-a456-426614174000",
          "brand": "اتیس",
          "status": "available",
          "currentPrice": 18000000
        }
        ```
      operationId: createPart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartRequest'
            examples:
              simple_motor:
                summary: "موتور ساده"
                value:
                  name: "موتور آسانسور اتیس"
                  serialNumber: "SN123456789"
                  categoryId: "123e4567-e89b-12d3-a456-426614174000"
                  brand: "اتیس"
                  status: "available"
                  currentPrice: 18000000
                  condition: "new"
              complete_part:
                summary: "قطعه کامل با جزئیات"
                value:
                  name: "موتور آسانسور اتیس پیشرفته"
                  nameEn: "Otis Advanced Elevator Motor"
                  description: "موتور آسانسور با قدرت 15 کیلووات مناسب برای ساختمان‌های بلند"
                  serialNumber: "SN987654321"
                  partNumber: "PN-MOT-015-ADV"
                  categoryId: "123e4567-e89b-12d3-a456-426614174000"
                  brand: "اتیس"
                  manufacturer: "شرکت اتیس بین‌الملل"
                  model: "ATL-1500-PRO"
                  status: "available"
                  condition: "new"
                  manufacturingDate: "1402-05-15"
                  currentPrice: 25000000
                  pricePerUnit: 25000000
                  currency: "IRR"
                  weight: 75.5
                  dimensions:
                    length: 120.0
                    width: 80.0
                    height: 150.0
                    unit: "cm"
                  specifications:
                    - name: "قدرت"
                      nameEn: "Power"
                      value: "15"
                      unit: "کیلووات"
                      type: "number"
                    - name: "ولتاژ"
                      nameEn: "Voltage"
                      value: "380"
                      unit: "ولت"
                      type: "number"
                    - name: "دور در دقیقه"
                      nameEn: "RPM"
                      value: "1450"
                      unit: "دور/دقیقه"
                      type: "number"
                  location:
                    type: "warehouse"
                    warehouse: "انبار مرکزی تهران"
                    shelf: "قفسه A-15-03"
                    province: "تهران"
                    city: "تهران"
                  warranty:
                    hasWarranty: true
                    warrantyPeriod: 24
                    warrantyProvider: "شرکت اتیس ایران"
                    warrantyStartDate: "1402-05-15"
                    warrantyTerms: "گارانتی شامل قطعات و کارکرد می‌باشد"
                  tags: ["اولویت_بالا", "موتور_پیشرفته", "گارانتی_دار"]
                  notes: "مناسب برای ساختمان‌های بالای 15 طبقه"
                  productType: "manufactured"
                  manufacturerCountry: "ایران"
      responses:
        '201':
          description: قطعه با موفقیت ثبت شد
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Part'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "قطعه با موفقیت ثبت شد"
              examples:
                created_part:
                  summary: "قطعه ایجاد شده"
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440001"
                    name: "موتور آسانسور اتیس"
                    serialNumber: "SN123456789"
                    qrCode: "QR_550e8400_e29b_41d4_a716_446655440001"
                    brand: "اتیس"
                    status: "available"
                    currentPrice: 18000000
                    createdAt: "2024-03-15T10:30:00Z"
                    message: "قطعه با موفقیت ثبت شد"
        '400':
          description: داده‌های ورودی نامعتبر
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                duplicate_serial:
                  summary: "شماره سریال تکراری"
                  value:
                    success: false
                    message: "شماره سریال تکراری است"
                    errors:
                      - field: "serialNumber"
                        message: "این شماره سریال قبلاً استفاده شده است"
                invalid_category:
                  summary: "دسته‌بندی نامعتبر"
                  value:
                    success: false
                    message: "دسته‌بندی انتخاب شده معتبر نیست"
                    errors:
                      - field: "categoryId"
                        message: "شناسه دسته‌بندی وجود ندارد"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          description: تداخل در داده‌ها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                conflict:
                  summary: "تداخل شماره سریال"
                  value:
                    success: false
                    message: "شماره سریال از قبل موجود است"

  /parts/{partId}:
    get:
      tags: [Parts]
      summary: جزئیات قطعه
      description: دریافت اطلاعات کامل یک قطعه
      operationId: getPart
      parameters:
        - $ref: '#/components/parameters/PartId'
      responses:
        '200':
          description: اطلاعات قطعه
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Part'

    put:
      tags: [Parts]
      summary: ویرایش قطعه
      description: ویرایش اطلاعات قطعه
      operationId: updatePart
      parameters:
        - $ref: '#/components/parameters/PartId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePartRequest'
      responses:
        '200':
          description: قطعه ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Part'

    delete:
      tags: [Parts]
      summary: حذف قطعه
      description: حذف قطعه از سیستم
      operationId: deletePart
      parameters:
        - $ref: '#/components/parameters/PartId'
      responses:
        '204':
          description: قطعه حذف شد

  /parts/categories:
    get:
      tags: [Parts]
      summary: دسته‌بندی قطعات
      description: دریافت لیست دسته‌بندی‌های قطعات
      operationId: getPartCategories
      responses:
        '200':
          description: لیست دسته‌بندی‌ها
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartCategory'

    post:
      tags: [Parts]
      summary: ایجاد دسته‌بندی جدید
      description: ایجاد دسته‌بندی جدید برای قطعات
      operationId: createPartCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, nameEn]
              properties:
                name:
                  type: string
                  example: "موتور آسانسور"
                nameEn:
                  type: string
                  example: "Elevator Motor"
                description:
                  type: string
                  example: "موتورهای مختلف آسانسور"
                parentId:
                  type: string
                  format: uuid
                  nullable: true
                specifications:
                  type: array
                  items:
                    $ref: '#/components/schemas/SpecificationDefinition'
      responses:
        '201':
          description: دسته‌بندی ایجاد شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartCategory'

  /parts/{partId}/transfer:
    post:
      tags: [Parts]
      summary: ایجاد درخواست انتقال قطعه
      description: |
        ایجاد درخواست انتقال مالکیت قطعه به کاربر دیگر
        
        ### انواع انتقال:
        - **فروش (sale)**: انتقال با دریافت وجه - قیمت الزامی
        - **هدیه (gift)**: انتقال رایگان - قیمت صفر
        - **جایگزینی (replacement)**: تعویض با قطعه دیگر
        - **انتقال داخلی (internal)**: بین شعب یک شرکت
        
        ### فرآیند تایید:
        1. درخواست انتقال ثبت می‌شود (وضعیت: pending)
        2. ادمین درخواست را بررسی می‌کند
        3. در صورت تایید، مالکیت منتقل می‌شود
        4. QR کد و شناسنامه به‌روزرسانی می‌شود
        
        ### مثال استفاده:
        ```json
        {
          "newOwnerId": "456e7890-e89b-12d3-a456-426614174001",
          "transferType": "sale",
          "price": 15000000,
          "description": "فروش موتور آسانسور"
        }
        ```
      operationId: transferPart
      parameters:
        - $ref: '#/components/parameters/PartId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [newOwnerId, transferType]
              properties:
                newOwnerId:
                  type: string
                  format: uuid
                  description: "شناسه مالک جدید (الزامی)"
                  example: "456e7890-e89b-12d3-a456-426614174001"
                transferType:
                  type: string
                  description: "نوع انتقال (الزامی)"
                  enum: [sale, gift, replacement, internal]
                  example: "sale"
                price:
                  type: number
                  format: decimal
                  description: "قیمت انتقال (ریال) - برای فروش الزامی"
                  minimum: 0
                  example: 15000000
                  nullable: true
                currency:
                  type: string
                  description: "واحد پولی"
                  enum: [IRR, USD, EUR]
                  default: "IRR"
                  example: "IRR"
                description:
                  type: string
                  description: "توضیحات انتقال"
                  maxLength: 500
                  example: "فروش قطعه موتور به دلیل تغییر پروژه"
                reason:
                  type: string
                  description: "دلیل انتقال"
                  enum: [sale, upgrade, defect, project_change, company_transfer, other]
                  example: "sale"
                transferDate:
                  type: string
                  format: date
                  description: "تاریخ مورد نظر برای انتقال (پیش‌فرض: امروز)"
                  example: "1403-02-15"
                urgentTransfer:
                  type: boolean
                  description: "آیا انتقال فوری است"
                  default: false
                  example: false
                paymentMethod:
                  type: string
                  description: "روش پرداخت (برای فروش)"
                  enum: [cash, bank_transfer, check, installment, other]
                  example: "bank_transfer"
                paymentDetails:
                  type: object
                  description: "جزئیات پرداخت"
                  properties:
                    bankAccount:
                      type: string
                      description: "شماره حساب"
                      example: "6037-9919-1234-5678"
                    trackingNumber:
                      type: string
                      description: "شماره پیگیری"
                      example: "TRK123456789"
                    dueDate:
                      type: string
                      format: date
                      description: "سررسید (برای چک)"
                      example: "1403-03-01"
                  nullable: true
                documents:
                  type: array
                  description: "مستندات ضمیمه انتقال"
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "قرارداد فروش"
                      url:
                        type: string
                        format: uri
                        example: "https://elevatorid.ieeu.ir/uploads/contracts/contract123.pdf"
                      type:
                        type: string
                        enum: [contract, invoice, receipt, warranty_transfer, other]
                        example: "contract"
                newLocation:
                  type: object
                  description: "موقعیت جدید قطعه پس از انتقال"
                  properties:
                    type:
                      type: string
                      enum: [warehouse, installation_site, service_center]
                      example: "warehouse"
                    warehouse:
                      type: string
                      example: "انبار شرکت خریدار"
                    address:
                      type: string
                      example: "اصفهان، خیابان چهارباغ، پلاک 567"
                    province:
                      type: string
                      example: "اصفهان"
                    city:
                      type: string
                      example: "اصفهان"
                    notes:
                      type: string
                      example: "انتقال به انبار مرکزی"
                notifications:
                  type: object
                  description: "تنظیمات اطلاع‌رسانی"
                  properties:
                    notifyNewOwner:
                      type: boolean
                      description: "اطلاع‌رسانی به مالک جدید"
                      default: true
                    notifyAdmin:
                      type: boolean
                      description: "اطلاع‌رسانی به ادمین"
                      default: true
                    smsNotification:
                      type: boolean
                      description: "اطلاع‌رسانی پیامکی"
                      default: false
                  nullable: true
            examples:
              sale_transfer:
                summary: "انتقال فروش"
                value:
                  newOwnerId: "456e7890-e89b-12d3-a456-426614174001"
                  transferType: "sale"
                  price: 15000000
                  currency: "IRR"
                  description: "فروش موتور آسانسور به شرکت نصب سریع"
                  reason: "sale"
                  paymentMethod: "bank_transfer"
                  paymentDetails:
                    bankAccount: "6037-9919-1234-5678"
                    trackingNumber: "TRK987654321"
                  newLocation:
                    type: "warehouse"
                    warehouse: "انبار شرکت خریدار"
                    province: "تهران"
                    city: "تهران"
              gift_transfer:
                summary: "انتقال هدیه"
                value:
                  newOwnerId: "789e0123-e89b-12d3-a456-426614174002"
                  transferType: "gift"
                  price: 0
                  description: "اهدای قطعه در قبال خدمات ارائه شده"
                  reason: "other"
              internal_transfer:
                summary: "انتقال داخلی"
                value:
                  newOwnerId: "321e6543-e89b-12d3-a456-426614174003"
                  transferType: "internal"
                  description: "انتقال بین شعب تهران و اصفهان"
                  reason: "company_transfer"
                  newLocation:
                    type: "warehouse"
                    warehouse: "انبار شعبه اصفهان"
                    province: "اصفهان"
                    city: "اصفهان"
      responses:
        '201':
          description: درخواست انتقال ایجاد شد
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Transfer'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "درخواست انتقال ثبت شد و در انتظار تایید ادمین است"
                      transferId:
                        type: string
                        format: uuid
                        example: "abc12345-e89b-12d3-a456-426614174000"
              examples:
                transfer_created:
                  summary: "انتقال ایجاد شده"
                  value:
                    id: "abc12345-e89b-12d3-a456-426614174000"
                    transferType: "sale"
                    price: 15000000
                    status: "pending"
                    transferDate: "2024-03-15T10:30:00Z"
                    description: "فروش موتور آسانسور"
                    message: "درخواست انتقال ثبت شد و در انتظار تایید ادمین است"
        '400':
          description: داده‌های ورودی نامعتبر
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid_owner:
                  summary: "مالک نامعتبر"
                  value:
                    success: false
                    message: "مالک جدید معتبر نیست"
                    errors:
                      - field: "newOwnerId"
                        message: "کاربر با این شناسه وجود ندارد"
                missing_price:
                  summary: "قیمت مفقود برای فروش"
                  value:
                    success: false
                    message: "برای انتقال نوع فروش، قیمت الزامی است"
                    errors:
                      - field: "price"
                        message: "قیمت برای فروش باید مشخص شود"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: عدم دسترسی
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                not_owner:
                  summary: "عدم مالکیت"
                  value:
                    success: false
                    message: "فقط مالک قطعه می‌تواند آن را منتقل کند"
        '404':
          description: قطعه یافت نشد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                part_not_found:
                  summary: "قطعه یافت نشد"
                  value:
                    success: false
                    message: "قطعه با این شناسه یافت نشد"
        '409':
          description: تداخل در درخواست
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                pending_transfer:
                  summary: "انتقال در انتظار"
                  value:
                    success: false
                    message: "برای این قطعه درخواست انتقال در انتظار تایید وجود دارد"

  /parts/{partId}/qr-code:
    get:
      tags: [Parts]
      summary: QR کد قطعه
      description: تولید QR کد برای قطعه
      operationId: getPartQRCode
      parameters:
        - $ref: '#/components/parameters/PartId'
        - name: size
          in: query
          schema:
            type: integer
            default: 200
            minimum: 100
            maximum: 500
      responses:
        '200':
          description: QR کد
          content:
            image/png:
              schema:
                type: string
                format: binary

  # =============================================================================
  # Transfers Management APIs
  # =============================================================================
  /transfers:
    get:
      tags: [Transfers]
      summary: لیست انتقال‌ها
      description: دریافت لیست انتقال‌های قطعات
      operationId: getTransfers
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Search'
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, approved, rejected, completed, all]
            default: all
        - name: transferType
          in: query
          schema:
            type: string
            enum: [sale, gift, replacement, all]
            default: all
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-01-01"
        - name: toDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-12-29"
      responses:
        '200':
          description: لیست انتقال‌ها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransfers'

  /transfers/{transferId}:
    get:
      tags: [Transfers]
      summary: جزئیات انتقال
      description: دریافت اطلاعات کامل یک انتقال
      operationId: getTransfer
      parameters:
        - $ref: '#/components/parameters/TransferId'
      responses:
        '200':
          description: اطلاعات انتقال
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'

  /transfers/{transferId}/approve:
    post:
      tags: [Transfers]
      summary: تایید انتقال
      description: تایید انتقال توسط ادمین
      operationId: approveTransfer
      parameters:
        - $ref: '#/components/parameters/TransferId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: string
                  example: "انتقال تایید شد"
      responses:
        '200':
          description: انتقال تایید شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'

  /transfers/{transferId}/reject:
    post:
      tags: [Transfers]
      summary: رد انتقال
      description: رد انتقال توسط ادمین
      operationId: rejectTransfer
      parameters:
        - $ref: '#/components/parameters/TransferId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [reason]
              properties:
                reason:
                  type: string
                  example: "اطلاعات ناقص"
      responses:
        '200':
          description: انتقال رد شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'

  # =============================================================================
  # Elevators Management APIs
  # =============================================================================
  /elevators:
    get:
      tags: [Elevators]
      summary: لیست آسانسورها
      description: دریافت لیست آسانسورها با امکان فیلتر و جستجو
      operationId: getElevators
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Search'
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, under_maintenance, all]
            default: all
        - name: type
          in: query
          schema:
            type: string
            enum: [passenger, freight, residential, commercial, all]
            default: all
        - name: province
          in: query
          schema:
            type: string
            example: "تهران"
        - name: city
          in: query
          schema:
            type: string
            example: "تهران"
      responses:
        '200':
          description: لیست آسانسورها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedElevators'

    post:
      tags: [Elevators]
      summary: ثبت آسانسور جدید
      description: ثبت آسانسور جدید در سیستم
      operationId: createElevator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateElevatorRequest'
      responses:
        '201':
          description: آسانسور ثبت شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Elevator'

  /elevators/{elevatorId}:
    get:
      tags: [Elevators]
      summary: جزئیات آسانسور
      description: دریافت اطلاعات کامل یک آسانسور
      operationId: getElevator
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
      responses:
        '200':
          description: اطلاعات آسانسور
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Elevator'

    put:
      tags: [Elevators]
      summary: ویرایش آسانسور
      description: ویرایش اطلاعات آسانسور
      operationId: updateElevator
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateElevatorRequest'
      responses:
        '200':
          description: آسانسور ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Elevator'

    delete:
      tags: [Elevators]
      summary: حذف آسانسور
      description: حذف آسانسور از سیستم
      operationId: deleteElevator
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
      responses:
        '204':
          description: آسانسور حذف شد

  /elevators/{elevatorId}/certificate:
    get:
      tags: [Elevators]
      summary: شناسنامه آسانسور
      description: دریافت شناسنامه آسانسور
      operationId: getElevatorCertificate
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
        - name: format
          in: query
          schema:
            type: string
            enum: [json, pdf]
            default: json
      responses:
        '200':
          description: شناسنامه آسانسور
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorCertificate'
            application/pdf:
              schema:
                type: string
                format: binary

  /elevators/{elevatorId}/parts:
    get:
      tags: [Elevators]
      summary: قطعات آسانسور
      description: دریافت لیست قطعات نصب شده در آسانسور
      operationId: getElevatorParts
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
      responses:
        '200':
          description: لیست قطعات
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElevatorPart'

    post:
      tags: [Elevators]
      summary: افزودن قطعه به آسانسور
      description: نصب قطعه جدید در آسانسور
      operationId: addPartToElevator
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [partId, installationDate]
              properties:
                partId:
                  type: string
                  format: uuid
                installationDate:
                  type: string
                  format: date
                  example: "1403-05-15"
                installedBy:
                  type: string
                  example: "شرکت نصب آسانسور"
                notes:
                  type: string
                  example: "نصب قطعه موتور جدید"
      responses:
        '201':
          description: قطعه به آسانسور اضافه شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorPart'

  /elevators/{elevatorId}/parts/{partId}/replace:
    post:
      tags: [Elevators]
      summary: تعویض قطعه آسانسور
      description: تعویض قطعه موجود با قطعه جدید
      operationId: replaceElevatorPart
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
        - $ref: '#/components/parameters/PartId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [newPartId, replacementDate, reason]
              properties:
                newPartId:
                  type: string
                  format: uuid
                replacementDate:
                  type: string
                  format: date
                  example: "1403-06-01"
                reason:
                  type: string
                  example: "خرابی قطعه قدیمی"
                installedBy:
                  type: string
                  example: "تکنسین تعمیرات"
                notes:
                  type: string
                  example: "تعویض به دلیل فرسودگی"
      responses:
        '200':
          description: قطعه تعویض شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorPart'

  # =============================================================================
  # Requests Management APIs
  # =============================================================================
  /requests:
    get:
      tags: [Requests]
      summary: لیست درخواست‌ها
      description: دریافت لیست درخواست‌ها و شکایات
      operationId: getRequests
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Search'
        - name: type
          in: query
          schema:
            type: string
            enum: [complaint, suggestion, technical_support, general, all]
            default: all
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, in_progress, resolved, closed, all]
            default: all
        - name: priority
          in: query
          schema:
            type: string
            enum: [low, medium, high, urgent, all]
            default: all
      responses:
        '200':
          description: لیست درخواست‌ها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRequests'

    post:
      tags: [Requests]
      summary: ثبت درخواست جدید
      description: ثبت درخواست یا شکایت جدید
      operationId: createRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestRequest'
      responses:
        '201':
          description: درخواست ثبت شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'

  /requests/{requestId}:
    get:
      tags: [Requests]
      summary: جزئیات درخواست
      description: دریافت اطلاعات کامل یک درخواست
      operationId: getRequest
      parameters:
        - $ref: '#/components/parameters/RequestId'
      responses:
        '200':
          description: اطلاعات درخواست
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'

    put:
      tags: [Requests]
      summary: ویرایش درخواست
      description: ویرایش درخواست توسط کاربر یا ادمین
      operationId: updateRequest
      parameters:
        - $ref: '#/components/parameters/RequestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequestRequest'
      responses:
        '200':
          description: درخواست ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'

  /requests/{requestId}/respond:
    post:
      tags: [Requests]
      summary: پاسخ به درخواست
      description: ارسال پاسخ به درخواست توسط ادمین
      operationId: respondToRequest
      parameters:
        - $ref: '#/components/parameters/RequestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [message]
              properties:
                message:
                  type: string
                  example: "درخواست شما بررسی و اقدام لازم انجام شد"
                status:
                  type: string
                  enum: [in_progress, resolved, closed]
                  example: "resolved"
                attachments:
                  type: array
                  items:
                    type: string
                    format: uri
      responses:
        '201':
          description: پاسخ ارسال شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'

  # =============================================================================
  # Reports APIs
  # =============================================================================
  /reports/parts:
    get:
      tags: [Reports]
      summary: گزارش قطعات
      description: گزارش آماری قطعات
      operationId: getPartsReport
      parameters:
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-01-01"
        - name: toDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-12-29"
        - name: category
          in: query
          schema:
            type: string
        - name: groupBy
          in: query
          schema:
            type: string
            enum: [category, brand, status, month]
            default: category
        - name: format
          in: query
          schema:
            type: string
            enum: [json, excel, pdf]
            default: json
      responses:
        '200':
          description: گزارش قطعات
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartsReport'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary

  /reports/transfers:
    get:
      tags: [Reports]
      summary: گزارش انتقال‌ها
      description: گزارش آماری انتقال‌ها
      operationId: getTransfersReport
      parameters:
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-01-01"
        - name: toDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-12-29"
        - name: transferType
          in: query
          schema:
            type: string
            enum: [sale, gift, replacement]
        - name: groupBy
          in: query
          schema:
            type: string
            enum: [type, status, month, user]
            default: month
        - name: format
          in: query
          schema:
            type: string
            enum: [json, excel, pdf]
            default: json
      responses:
        '200':
          description: گزارش انتقال‌ها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransfersReport'

  /reports/elevators:
    get:
      tags: [Reports]
      summary: گزارش آسانسورها
      description: گزارش آماری آسانسورها
      operationId: getElevatorsReport
      parameters:
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-01-01"
        - name: toDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-12-29"
        - name: type
          in: query
          schema:
            type: string
            enum: [passenger, freight, residential, commercial]
        - name: province
          in: query
          schema:
            type: string
        - name: groupBy
          in: query
          schema:
            type: string
            enum: [type, status, province, month]
            default: province
        - name: format
          in: query
          schema:
            type: string
            enum: [json, excel, pdf]
            default: json
      responses:
        '200':
          description: گزارش آسانسورها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorsReport'

  /reports/financial:
    get:
      tags: [Reports]
      summary: گزارش مالی
      description: گزارش مالی انتقال‌ها و فروش‌ها
      operationId: getFinancialReport
      parameters:
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-01-01"
        - name: toDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-12-29"
        - name: groupBy
          in: query
          schema:
            type: string
            enum: [month, quarter, year, category]
            default: month
        - name: format
          in: query
          schema:
            type: string
            enum: [json, excel, pdf]
            default: json
      responses:
        '200':
          description: گزارش مالی
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialReport'

  # =============================================================================
  # Profile APIs
  # =============================================================================
  /profile:
    get:
      tags: [Profile]
      summary: اطلاعات پروفایل
      description: دریافت اطلاعات پروفایل کاربر جاری
      operationId: getProfile
      responses:
        '200':
          description: اطلاعات پروفایل
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

    put:
      tags: [Profile]
      summary: ویرایش پروفایل
      description: ویرایش اطلاعات پروفایل کاربر
      operationId: updateProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: پروفایل ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /profile/avatar:
    post:
      tags: [Profile]
      summary: آپلود آواتار
      description: آپلود تصویر آواتار کاربر
      operationId: uploadAvatar
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [avatar]
              properties:
                avatar:
                  type: string
                  format: binary
                  description: فایل تصویر (PNG, JPG, JPEG - حداکثر 2MB)
      responses:
        '200':
          description: آواتار آپلود شد
          content:
            application/json:
              schema:
                type: object
                properties:
                  avatarUrl:
                    type: string
                    format: uri
                    example: "https://elevatorid.ieeu.ir/uploads/avatars/user123.jpg"

  /profile/change-password:
    post:
      tags: [Profile]
      summary: تغییر رمز عبور
      description: تغییر رمز عبور کاربر
      operationId: changePassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [currentPassword, newPassword]
              properties:
                currentPassword:
                  type: string
                  example: "current123"
                newPassword:
                  type: string
                  minLength: 8
                  example: "newpassword123"
      responses:
        '200':
          description: رمز عبور تغییر کرد
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "رمز عبور با موفقیت تغییر کرد"

  # =============================================================================
  # Settings APIs
  # =============================================================================
  /settings:
    get:
      tags: [Settings]
      summary: تنظیمات سیستم
      description: دریافت تنظیمات سیستم
      operationId: getSettings
      responses:
        '200':
          description: تنظیمات سیستم
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemSettings'

    put:
      tags: [Settings]
      summary: ویرایش تنظیمات
      description: ویرایش تنظیمات سیستم توسط ادمین
      operationId: updateSettings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingsRequest'
      responses:
        '200':
          description: تنظیمات ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemSettings'

  /settings/backup:
    post:
      tags: [Settings]
      summary: پشتیبان‌گیری
      description: ایجاد پشتیبان از سیستم
      operationId: createBackup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                includeFiles:
                  type: boolean
                  default: true
                includeLogs:
                  type: boolean
                  default: false
      responses:
        '200':
          description: پشتیبان ایجاد شد
          content:
            application/json:
              schema:
                type: object
                properties:
                  backupId:
                    type: string
                    example: "backup_1403_05_15_123456"
                  downloadUrl:
                    type: string
                    format: uri
                    example: "https://elevatorid.ieeu.ir/downloads/backups/backup_1403_05_15_123456.zip"

  # =============================================================================
  # Upload APIs
  # =============================================================================
  /upload/image:
    post:
      tags: [Upload]
      summary: آپلود تصویر
      description: آپلود فایل تصویر
      operationId: uploadImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [file]
              properties:
                file:
                  type: string
                  format: binary
                  description: فایل تصویر (PNG, JPG, JPEG, WEBP - حداکثر 10MB)
                category:
                  type: string
                  enum: [part, elevator, user, document]
                  default: document
      responses:
        '200':
          description: تصویر آپلود شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'

  /upload/document:
    post:
      tags: [Upload]
      summary: آپلود مستند
      description: آپلود فایل مستند
      operationId: uploadDocument
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [file]
              properties:
                file:
                  type: string
                  format: binary
                  description: فایل مستند (PDF, DOC, DOCX - حداکثر 50MB)
                category:
                  type: string
                  enum: [certificate, manual, report, other]
                  default: other
      responses:
        '200':
          description: مستند آپلود شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'

  # =============================================================================
  # Geography APIs
  # =============================================================================
  /geography/provinces:
    get:
      tags: [Geography]
      summary: لیست استان‌ها
      description: دریافت لیست استان‌های ایران
      operationId: getProvinces
      responses:
        '200':
          description: لیست استان‌ها
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Province'

  /geography/provinces/{provinceId}/cities:
    get:
      tags: [Geography]
      summary: لیست شهرهای استان
      description: دریافت لیست شهرهای یک استان
      operationId: getProvinceCities
      parameters:
        - name: provinceId
          in: path
          required: true
          schema:
            type: integer
            example: 8
      responses:
        '200':
          description: لیست شهرها
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'

# =============================================================================
# Components
# =============================================================================
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    Page:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
        default: 1
    Limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    Search:
      name: search
      in: query
      schema:
        type: string
        example: "جستجو"
    UserId:
      name: userId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    PartId:
      name: partId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    TransferId:
      name: transferId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    ElevatorId:
      name: elevatorId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    RequestId:
      name: requestId
      in: path
      required: true
      schema:
        type: string
        format: uuid

  responses:
    BadRequest:
      description: درخواست نامعتبر
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: عدم احراز هویت
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: عدم دسترسی
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: یافت نشد
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TooManyRequests:
      description: تعداد درخواست‌ها زیاد
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: خطای سرور
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    # Base schemas
    Error:
      type: object
      required: [success, message]
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "خطا در درخواست"
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

    PaginationMeta:
      type: object
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 20
        total:
          type: integer
          example: 150
        totalPages:
          type: integer
          example: 8
        hasNext:
          type: boolean
          example: true
        hasPrev:
          type: boolean
          example: false

    # User schemas
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        mobile:
          type: string
          example: "09123456789"
        firstName:
          type: string
          example: "علی"
        lastName:
          type: string
          example: "احمدی"
        email:
          type: string
          format: email
          example: "ali@example.com"
          nullable: true
        role:
          type: string
          enum: [admin, user]
          example: "user"
        status:
          type: string
          enum: [active, inactive, banned]
          example: "active"
        province:
          type: string
          example: "تهران"
        city:
          type: string
          example: "تهران"
        address:
          type: string
          example: "خیابان ولیعصر، پلاک 123"
          nullable: true
        nationalId:
          type: string
          example: "1234567890"
          nullable: true
        companyName:
          type: string
          example: "شرکت آسانسور سازان"
          nullable: true
        licenseNumber:
          type: string
          example: "LIC-12345"
          nullable: true
        avatarUrl:
          type: string
          format: uri
          example: "https://elevatorid.ieeu.ir/uploads/avatars/user123.jpg"
          nullable: true
        emailVerified:
          type: boolean
          example: false
        mobileVerified:
          type: boolean
          example: true
        lastLoginAt:
          type: string
          format: date-time
          example: "2024-03-15T10:30:00Z"
          nullable: true
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T09:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-03-15T10:30:00Z"

    CreateUserRequest:
      type: object
      required: [mobile, firstName, lastName, role]
      properties:
        mobile:
          type: string
          pattern: '^09[0-9]{9}$'
        firstName:
          type: string
          minLength: 2
        lastName:
          type: string
          minLength: 2
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin, user]
        province:
          type: string
        city:
          type: string
        address:
          type: string
        nationalId:
          type: string
          pattern: '^[0-9]{10}$'
        companyName:
          type: string
        licenseNumber:
          type: string

    UpdateUserRequest:
      type: object
      properties:
        firstName:
          type: string
          minLength: 2
        lastName:
          type: string
          minLength: 2
        email:
          type: string
          format: email
        province:
          type: string
        city:
          type: string
        address:
          type: string
        companyName:
          type: string
        licenseNumber:
          type: string
        status:
          type: string
          enum: [active, inactive, banned]

    UserProfile:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            preferences:
              type: object
              properties:
                language:
                  type: string
                  enum: [fa, en]
                  default: fa
                theme:
                  type: string
                  enum: [light, dark, auto]
                  default: light
                notifications:
                  type: object
                  properties:
                    email:
                      type: boolean
                      default: true
                    sms:
                      type: boolean
                      default: true
                    push:
                      type: boolean
                      default: true

    UpdateProfileRequest:
      type: object
      properties:
        firstName:
          type: string
          minLength: 2
        lastName:
          type: string
          minLength: 2
        email:
          type: string
          format: email
        province:
          type: string
        city:
          type: string
        address:
          type: string
        companyName:
          type: string
        preferences:
          type: object
          properties:
            language:
              type: string
              enum: [fa, en]
            theme:
              type: string
              enum: [light, dark, auto]
            notifications:
              type: object
              properties:
                email:
                  type: boolean
                sms:
                  type: boolean
                push:
                  type: boolean

    PaginatedUsers:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    # Part schemas
    Part:
      type: object
      required: [id, name, serialNumber, categoryId, ownerId, status]
      properties:
        id:
          type: string
          format: uuid
          description: "شناسه منحصر به فرد قطعه"
          example: "550e8400-e29b-41d4-a716-446655440001"
        name:
          type: string
          description: "نام فارسی قطعه"
          minLength: 3
          maxLength: 200
          example: "موتور آسانسور اتیس"
        nameEn:
          type: string
          description: "نام انگلیسی قطعه"
          maxLength: 200
          example: "Otis Elevator Motor"
          nullable: true
        description:
          type: string
          description: "توضیحات تکمیلی قطعه"
          maxLength: 1000
          example: "موتور آسانسور با قدرت 10 کیلووات مناسب برای ظرفیت 8 نفر"
          nullable: true
        # Category Information
        categoryId:
          type: string
          format: uuid
          description: "شناسه دسته‌بندی قطعه"
          example: "123e4567-e89b-12d3-a456-426614174000"
        category:
          $ref: '#/components/schemas/PartCategory'
          description: "اطلاعات کامل دسته‌بندی"
        # Basic Information
        brand:
          type: string
          description: "برند سازنده"
          maxLength: 100
          example: "اتیس"
        manufacturer:
          type: string
          description: "شرکت سازنده"
          maxLength: 200
          example: "شرکت اتیس ایران"
          nullable: true
        model:
          type: string
          description: "مدل قطعه"
          maxLength: 100
          example: "ATL-800"
          nullable: true
        serialNumber:
          type: string
          description: "شماره سریال منحصر به فرد"
          maxLength: 50
          example: "SN123456789"
        partNumber:
          type: string
          description: "شماره قطعه (Part Number)"
          maxLength: 50
          example: "PN-MOT-001"
          nullable: true
        qrCode:
          type: string
          description: "کد QR منحصر به فرد قطعه"
          example: "QR123456789"
          readOnly: true
        # Status and Condition
        status:
          type: string
          description: "وضعیت فعلی قطعه"
          enum: [available, sold, installed, defective, under_repair, reserved]
          example: "available"
        condition:
          type: string
          description: "شرایط فیزیکی قطعه"
          enum: [new, excellent, good, fair, poor, damaged]
          example: "new"
        # Dates
        manufacturingDate:
          type: string
          format: date
          description: "تاریخ تولید (شمسی)"
          example: "1402-05-15"
          nullable: true
        installationDate:
          type: string
          format: date
          description: "تاریخ نصب (در صورت نصب)"
          example: "1402-06-01"
          nullable: true
        expiryDate:
          type: string
          format: date
          description: "تاریخ انقضا یا مهلت مصرف"
          example: "1412-05-15"
          nullable: true
        lastMaintenanceDate:
          type: string
          format: date
          description: "تاریخ آخرین سرویس"
          example: "1403-01-15"
          nullable: true
        nextMaintenanceDate:
          type: string
          format: date
          description: "تاریخ سرویس بعدی"
          example: "1403-07-15"
          nullable: true
        # Pricing
        purchasePrice:
          type: number
          format: decimal
          description: "قیمت خرید اولیه (ریال)"
          minimum: 0
          example: 15000000
          nullable: true
        currentPrice:
          type: number
          format: decimal
          description: "قیمت فعلی یا قیمت فروش (ریال)"
          minimum: 0
          example: 18000000
          nullable: true
        pricePerUnit:
          type: number
          format: decimal
          description: "قیمت هر واحد (ریال)"
          minimum: 0
          example: 18000000
          nullable: true
        currency:
          type: string
          description: "واحد پولی"
          enum: [IRR, USD, EUR]
          default: "IRR"
          example: "IRR"
        # Physical Properties
        weight:
          type: number
          format: decimal
          description: "وزن (کیلوگرم)"
          minimum: 0
          example: 50.5
          nullable: true
        dimensions:
          type: object
          description: "ابعاد قطعه"
          properties:
            length:
              type: number
              format: decimal
              description: "طول (سانتی‌متر)"
              minimum: 0
              example: 80.5
            width:
              type: number
              format: decimal
              description: "عرض (سانتی‌متر)"
              minimum: 0
              example: 60.0
            height:
              type: number
              format: decimal
              description: "ارتفاع (سانتی‌متر)"
              minimum: 0
              example: 120.0
            unit:
              type: string
              description: "واحد اندازه‌گیری"
              enum: [cm, m, mm]
              default: "cm"
          nullable: true
        # Technical Specifications
        specifications:
          type: array
          description: "مشخصات فنی قطعه"
          items:
            type: object
            required: [name, value]
            properties:
              name:
                type: string
                description: "نام مشخصه فنی"
                example: "قدرت"
              nameEn:
                type: string
                description: "نام انگلیسی مشخصه"
                example: "Power"
                nullable: true
              value:
                type: string
                description: "مقدار مشخصه"
                example: "10"
              unit:
                type: string
                description: "واحد اندازه‌گیری"
                example: "کیلووات"
                nullable: true
              type:
                type: string
                description: "نوع داده"
                enum: [text, number, boolean, date]
                default: "text"
              isRequired:
                type: boolean
                description: "آیا این مشخصه الزامی است"
                default: false
        # Media and Documents
        images:
          type: array
          description: "تصاویر قطعه"
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              url:
                type: string
                format: uri
                example: "https://elevatorid.ieeu.ir/uploads/parts/image1.jpg"
              title:
                type: string
                example: "تصویر جلو"
              description:
                type: string
                example: "نمای جلوی قطعه"
                nullable: true
              isMain:
                type: boolean
                description: "آیا تصویر اصلی است"
                default: false
              uploadedAt:
                type: string
                format: date-time
        documents:
          type: array
          description: "مستندات قطعه"
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
                example: "راهنمای نصب"
              url:
                type: string
                format: uri
                example: "https://elevatorid.ieeu.ir/uploads/docs/manual.pdf"
              type:
                type: string
                enum: [manual, certificate, warranty, datasheet, installation_guide, other]
                example: "manual"
              size:
                type: integer
                description: "حجم فایل (بایت)"
                example: 2048576
              mimeType:
                type: string
                example: "application/pdf"
              uploadedAt:
                type: string
                format: date-time
        # Ownership and Location
        ownerId:
          type: string
          format: uuid
          description: "شناسه مالک قطعه"
          example: "456e7890-e89b-12d3-a456-426614174001"
        owner:
          $ref: '#/components/schemas/User'
          description: "اطلاعات مالک"
        location:
          type: object
          description: "موقعیت قطعه"
          properties:
            type:
              type: string
              enum: [warehouse, installation_site, service_center, in_transit]
              example: "warehouse"
              default: "warehouse"
            warehouse:
              type: string
              description: "نام انبار"
              example: "انبار مرکزی تهران"
              nullable: true
            shelf:
              type: string
              description: "مشخصات قفسه"
              example: "قفسه A-12-03"
              nullable: true
            building:
              type: string
              description: "نام ساختمان (در صورت نصب)"
              example: "برج تجاری پارس"
              nullable: true
            address:
              type: string
              description: "آدرس دقیق"
              example: "تهران، خیابان ولیعصر، پلاک 123"
              nullable: true
            province:
              type: string
              description: "استان"
              example: "تهران"
              nullable: true
            city:
              type: string
              description: "شهر"
              example: "تهران"
              nullable: true
            coordinates:
              type: object
              description: "مختصات جغرافیایی"
              properties:
                latitude:
                  type: number
                  format: decimal
                  example: 35.6892
                longitude:
                  type: number
                  format: decimal
                  example: 51.3890
              nullable: true
            notes:
              type: string
              description: "یادداشت‌های اضافی"
              example: "در قسمت قطعات فوری نگهداری شود"
              nullable: true
        # Warranty Information
        warranty:
          type: object
          description: "اطلاعات گارانتی"
          properties:
            hasWarranty:
              type: boolean
              description: "آیا گارانتی دارد"
              default: false
            warrantyPeriod:
              type: integer
              description: "مدت گارانتی (ماه)"
              minimum: 1
              maximum: 120
              example: 24
              nullable: true
            warrantyProvider:
              type: string
              description: "ارائه دهنده گارانتی"
              example: "شرکت اتیس ایران"
              nullable: true
            warrantyStartDate:
              type: string
              format: date
              description: "تاریخ شروع گارانتی"
              example: "1402-05-15"
              nullable: true
            warrantyEndDate:
              type: string
              format: date
              description: "تاریخ پایان گارانتی"
              example: "1404-05-15"
              nullable: true
            warrantyTerms:
              type: string
              description: "شرایط گارانتی"
              example: "گارانتی شامل قطعات و کارکرد می‌باشد"
              nullable: true
            warrantyDocument:
              type: string
              format: uri
              description: "سند گارانتی"
              nullable: true
          nullable: true
        # Lifecycle and Maintenance
        lifecycleStage:
          type: string
          description: "مرحله چرخه حیات"
          enum: [new, active, maintenance_required, end_of_life, disposed]
          example: "active"
          default: "new"
        maintenanceSchedule:
          type: object
          description: "برنامه سرویس"
          properties:
            intervalMonths:
              type: integer
              description: "فاصله سرویس (ماه)"
              minimum: 1
              example: 6
            lastServiceType:
              type: string
              enum: [inspection, preventive, corrective, overhaul]
              example: "preventive"
              nullable: true
            nextServiceType:
              type: string
              enum: [inspection, preventive, corrective, overhaul]
              example: "inspection"
              nullable: true
            serviceProvider:
              type: string
              description: "ارائه دهنده سرویس"
              example: "شرکت نگهداری آسانسور"
              nullable: true
          nullable: true
        # Additional Properties
        tags:
          type: array
          description: "برچسب‌های قطعه"
          items:
            type: string
          example: ["اولویت_بالا", "کریتیکال", "وارداتی"]
        notes:
          type: string
          description: "یادداشت‌های اضافی"
          maxLength: 2000
          example: "این قطعه برای آسانسورهای بالای 10 طبقه مناسب است"
          nullable: true
        isActive:
          type: boolean
          description: "آیا قطعه فعال است"
          default: true
        # Timestamps
        createdAt:
          type: string
          format: date-time
          description: "تاریخ ایجاد"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: "تاریخ آخرین ویرایش"
          readOnly: true
        createdBy:
          type: string
          format: uuid
          description: "شناسه کاربر ایجادکننده"
          readOnly: true
        updatedBy:
          type: string
          format: uuid
          description: "شناسه کاربر آخرین ویرایش"
          readOnly: true
          nullable: true

    PartCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: "موتور آسانسور"
        nameEn:
          type: string
          example: "Elevator Motor"
        description:
          type: string
          example: "موتورهای مختلف آسانسور"
        parentId:
          type: string
          format: uuid
          nullable: true
        level:
          type: integer
          example: 1
        specifications:
          type: array
          items:
            $ref: '#/components/schemas/SpecificationDefinition'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    SpecificationDefinition:
      type: object
      properties:
        name:
          type: string
          example: "قدرت"
        nameEn:
          type: string
          example: "Power"
        type:
          type: string
          enum: [text, number, boolean, select, multiselect]
          example: "number"
        unit:
          type: string
          example: "کیلووات"
          nullable: true
        required:
          type: boolean
          default: false
        options:
          type: array
          items:
            type: string
          nullable: true

    CreatePartRequest:
      type: object
      required: [name, categoryId, serialNumber, status]
      properties:
        # Basic Information
        name:
          type: string
          description: "نام فارسی قطعه"
          minLength: 3
          maxLength: 200
          example: "موتور آسانسور اتیس"
        nameEn:
          type: string
          description: "نام انگلیسی قطعه"
          maxLength: 200
          example: "Otis Elevator Motor"
        description:
          type: string
          description: "توضیحات تکمیلی"
          maxLength: 1000
          example: "موتور آسانسور با قدرت 10 کیلووات"
        # Category
        categoryId:
          type: string
          format: uuid
          description: "شناسه دسته‌بندی (الزامی)"
          example: "123e4567-e89b-12d3-a456-426614174000"
        # Identification
        brand:
          type: string
          description: "برند سازنده"
          maxLength: 100
          example: "اتیس"
        manufacturer:
          type: string
          description: "شرکت سازنده"
          maxLength: 200
          example: "شرکت اتیس ایران"
        model:
          type: string
          description: "مدل قطعه"
          maxLength: 100
          example: "ATL-800"
        serialNumber:
          type: string
          description: "شماره سریال منحصر به فرد (الزامی)"
          maxLength: 50
          example: "SN123456789"
        partNumber:
          type: string
          description: "شماره قطعه"
          maxLength: 50
          example: "PN-MOT-001"
        # Status
        status:
          type: string
          description: "وضعیت اولیه قطعه (الزامی)"
          enum: [available, installed, reserved]
          default: "available"
          example: "available"
        condition:
          type: string
          description: "شرایط فیزیکی قطعه"
          enum: [new, excellent, good, fair, poor]
          default: "new"
          example: "new"
        # Dates
        manufacturingDate:
          type: string
          format: date
          description: "تاریخ تولید (شمسی)"
          example: "1402-05-15"
        installationDate:
          type: string
          format: date
          description: "تاریخ نصب (در صورت وجود)"
          example: "1402-06-01"
        expiryDate:
          type: string
          format: date
          description: "تاریخ انقضا"
          example: "1412-05-15"
        # Pricing
        purchasePrice:
          type: number
          format: decimal
          description: "قیمت خرید (ریال)"
          minimum: 0
          example: 15000000
        currentPrice:
          type: number
          format: decimal
          description: "قیمت فعلی (ریال)"
          minimum: 0
          example: 18000000
        pricePerUnit:
          type: number
          format: decimal
          description: "قیمت هر واحد (ریال)"
          minimum: 0
          example: 18000000
        currency:
          type: string
          description: "واحد پولی"
          enum: [IRR, USD, EUR]
          default: "IRR"
        # Physical Properties
        weight:
          type: number
          format: decimal
          description: "وزن (کیلوگرم)"
          minimum: 0
          example: 50.5
        dimensions:
          type: object
          description: "ابعاد قطعه"
          properties:
            length:
              type: number
              format: decimal
              description: "طول (سانتی‌متر)"
              minimum: 0
              example: 80.5
            width:
              type: number
              format: decimal
              description: "عرض (سانتی‌متر)"
              minimum: 0
              example: 60.0
            height:
              type: number
              format: decimal
              description: "ارتفاع (سانتی‌متر)"
              minimum: 0
              example: 120.0
            unit:
              type: string
              enum: [cm, m, mm]
              default: "cm"
        # Technical Specifications
        specifications:
          type: array
          description: "مشخصات فنی"
          items:
            type: object
            required: [name, value]
            properties:
              name:
                type: string
                description: "نام مشخصه"
                example: "قدرت"
              nameEn:
                type: string
                description: "نام انگلیسی"
                example: "Power"
              value:
                type: string
                description: "مقدار"
                example: "10"
              unit:
                type: string
                description: "واحد"
                example: "کیلووات"
              type:
                type: string
                enum: [text, number, boolean, date]
                default: "text"
        # Location
        location:
          type: object
          description: "موقعیت قطعه"
          properties:
            type:
              type: string
              enum: [warehouse, installation_site, service_center]
              default: "warehouse"
            warehouse:
              type: string
              description: "نام انبار"
              example: "انبار مرکزی تهران"
            shelf:
              type: string
              description: "قفسه"
              example: "قفسه A-12-03"
            building:
              type: string
              description: "نام ساختمان"
              example: "برج تجاری پارس"
            address:
              type: string
              description: "آدرس"
              example: "تهران، خیابان ولیعصر"
            province:
              type: string
              description: "استان"
              example: "تهران"
            city:
              type: string
              description: "شهر"
              example: "تهران"
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                  format: decimal
                longitude:
                  type: number
                  format: decimal
            notes:
              type: string
              description: "یادداشت‌ها"
              example: "در بخش قطعات اضطراری"
        # Warranty
        warranty:
          type: object
          description: "اطلاعات گارانتی"
          properties:
            hasWarranty:
              type: boolean
              description: "آیا گارانتی دارد"
              default: false
            warrantyPeriod:
              type: integer
              description: "مدت گارانتی (ماه)"
              minimum: 1
              maximum: 120
              example: 24
            warrantyProvider:
              type: string
              description: "ارائه دهنده گارانتی"
              example: "شرکت اتیس ایران"
            warrantyStartDate:
              type: string
              format: date
              description: "تاریخ شروع گارانتی"
              example: "1402-05-15"
            warrantyTerms:
              type: string
              description: "شرایط گارانتی"
              example: "گارانتی شامل قطعات و کارکرد"
        # Maintenance
        maintenanceSchedule:
          type: object
          description: "برنامه سرویس"
          properties:
            intervalMonths:
              type: integer
              description: "فاصله سرویس (ماه)"
              minimum: 1
              example: 6
            serviceProvider:
              type: string
              description: "ارائه دهنده سرویس"
              example: "شرکت نگهداری"
        # Additional
        tags:
          type: array
          description: "برچسب‌ها"
          items:
            type: string
          example: ["اولویت_بالا", "وارداتی"]
        notes:
          type: string
          description: "یادداشت‌های اضافی"
          maxLength: 2000
          example: "مناسب آسانسورهای بالای 10 طبقه"
        # Import Information
        productType:
          type: string
          description: "نوع قطعه از نظر منشاء"
          enum: [manufactured, imported]
          default: "manufactured"
          example: "manufactured"
        manufacturerCountry:
          type: string
          description: "کشور سازنده"
          example: "ایران"
        originCountry:
          type: string
          description: "کشور مبدأ (برای وارداتی)"
          example: "آلمان"
        customsClearanceDocument:
          type: string
          format: uri
          description: "سند ترخیص گمرکی (برای وارداتی)"
          example: "https://elevatorid.ieeu.ir/uploads/customs/clearance.pdf"

    UpdatePartRequest:
      type: object
      description: "درخواست ویرایش قطعه - تمام فیلدها اختیاری هستند"
      properties:
        # Basic Information
        name:
          type: string
          description: "نام فارسی قطعه"
          minLength: 3
          maxLength: 200
          example: "موتور آسانسور اتیس بهبود یافته"
        nameEn:
          type: string
          description: "نام انگلیسی قطعه"
          maxLength: 200
          example: "Otis Elevator Motor Enhanced"
        description:
          type: string
          description: "توضیحات تکمیلی"
          maxLength: 1000
          example: "موتور آسانسور با قدرت بالا و مصرف کم"
        # Identification
        brand:
          type: string
          description: "برند سازنده"
          maxLength: 100
          example: "اتیس"
        manufacturer:
          type: string
          description: "شرکت سازنده"
          maxLength: 200
          example: "شرکت اتیس بین‌الملل"
        model:
          type: string
          description: "مدل قطعه"
          maxLength: 100
          example: "ATL-800-V2"
        partNumber:
          type: string
          description: "شماره قطعه"
          maxLength: 50
          example: "PN-MOT-001-V2"
        # Status (Cannot change serialNumber after creation)
        status:
          type: string
          description: "وضعیت قطعه"
          enum: [available, sold, installed, defective, under_repair, reserved]
          example: "available"
        condition:
          type: string
          description: "شرایط فیزیکی"
          enum: [new, excellent, good, fair, poor, damaged]
          example: "good"
        # Dates
        installationDate:
          type: string
          format: date
          description: "تاریخ نصب"
          example: "1402-06-01"
        expiryDate:
          type: string
          format: date
          description: "تاریخ انقضا"
          example: "1412-05-15"
        lastMaintenanceDate:
          type: string
          format: date
          description: "تاریخ آخرین سرویس"
          example: "1403-01-15"
        nextMaintenanceDate:
          type: string
          format: date
          description: "تاریخ سرویس بعدی"
          example: "1403-07-15"
        # Pricing
        currentPrice:
          type: number
          format: decimal
          description: "قیمت فعلی (ریال)"
          minimum: 0
          example: 20000000
        pricePerUnit:
          type: number
          format: decimal
          description: "قیمت هر واحد (ریال)"
          minimum: 0
          example: 20000000
        currency:
          type: string
          description: "واحد پولی"
          enum: [IRR, USD, EUR]
          example: "IRR"
        # Physical Properties
        weight:
          type: number
          format: decimal
          description: "وزن (کیلوگرم)"
          minimum: 0
          example: 52.0
        dimensions:
          type: object
          description: "ابعاد قطعه"
          properties:
            length:
              type: number
              format: decimal
              description: "طول (سانتی‌متر)"
              minimum: 0
              example: 82.0
            width:
              type: number
              format: decimal
              description: "عرض (سانتی‌متر)"
              minimum: 0
              example: 61.0
            height:
              type: number
              format: decimal
              description: "ارتفاع (سانتی‌متر)"
              minimum: 0
              example: 122.0
            unit:
              type: string
              enum: [cm, m, mm]
              example: "cm"
        # Technical Specifications
        specifications:
          type: array
          description: "مشخصات فنی جدید (جایگزین کامل)"
          items:
            type: object
            required: [name, value]
            properties:
              name:
                type: string
                description: "نام مشخصه"
                example: "قدرت"
              nameEn:
                type: string
                description: "نام انگلیسی"
                example: "Power"
              value:
                type: string
                description: "مقدار"
                example: "12"
              unit:
                type: string
                description: "واحد"
                example: "کیلووات"
              type:
                type: string
                enum: [text, number, boolean, date]
                default: "text"
              isRequired:
                type: boolean
                default: false
        # Location
        location:
          type: object
          description: "موقعیت جدید قطعه"
          properties:
            type:
              type: string
              enum: [warehouse, installation_site, service_center, in_transit]
              example: "installation_site"
            warehouse:
              type: string
              description: "نام انبار"
              example: "انبار شعبه شمال"
            shelf:
              type: string
              description: "قفسه"
              example: "قفسه B-15-02"
            building:
              type: string
              description: "نام ساختمان"
              example: "برج تجاری آزادی"
            address:
              type: string
              description: "آدرس"
              example: "تهران، میدان آزادی"
            province:
              type: string
              description: "استان"
              example: "تهران"
            city:
              type: string
              description: "شهر"
              example: "تهران"
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                  format: decimal
                  example: 35.6992
                longitude:
                  type: number
                  format: decimal
                  example: 51.3390
            notes:
              type: string
              description: "یادداشت‌ها"
              example: "منتقل شده به محل نصب"
        # Warranty
        warranty:
          type: object
          description: "بروزرسانی اطلاعات گارانتی"
          properties:
            hasWarranty:
              type: boolean
              description: "آیا گارانتی دارد"
            warrantyPeriod:
              type: integer
              description: "مدت گارانتی (ماه)"
              minimum: 1
              maximum: 120
              example: 18
            warrantyProvider:
              type: string
              description: "ارائه دهنده گارانتی"
              example: "شرکت اتیس ایران پلاس"
            warrantyStartDate:
              type: string
              format: date
              description: "تاریخ شروع گارانتی"
              example: "1402-06-01"
            warrantyEndDate:
              type: string
              format: date
              description: "تاریخ پایان گارانتی"
              example: "1404-12-01"
            warrantyTerms:
              type: string
              description: "شرایط گارانتی"
              example: "گارانتی شامل قطعات، کارکرد و سرویس"
        # Maintenance
        maintenanceSchedule:
          type: object
          description: "بروزرسانی برنامه سرویس"
          properties:
            intervalMonths:
              type: integer
              description: "فاصله سرویس (ماه)"
              minimum: 1
              example: 4
            lastServiceType:
              type: string
              enum: [inspection, preventive, corrective, overhaul]
              example: "preventive"
            nextServiceType:
              type: string
              enum: [inspection, preventive, corrective, overhaul]
              example: "inspection"
            serviceProvider:
              type: string
              description: "ارائه دهنده سرویس"
              example: "شرکت نگهداری پیشرفته"
        # Lifecycle
        lifecycleStage:
          type: string
          description: "مرحله چرخه حیات"
          enum: [new, active, maintenance_required, end_of_life, disposed]
          example: "active"
        # Additional Properties
        tags:
          type: array
          description: "برچسب‌های جدید (جایگزین کامل)"
          items:
            type: string
          example: ["اولویت_متوسط", "نصب_شده", "تست_شده"]
        notes:
          type: string
          description: "یادداشت‌های اضافی"
          maxLength: 2000
          example: "قطعه با موفقیت نصب و تست شده"
        isActive:
          type: boolean
          description: "وضعیت فعال/غیرفعال"
          example: true
        # Transfer ownership (if needed)
        newOwnerId:
          type: string
          format: uuid
          description: "شناسه مالک جدید (در صورت انتقال مالکیت)"
          example: "789e0123-e89b-12d3-a456-426614174002"

    PaginatedParts:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    # Transfer schemas
    Transfer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        part:
          $ref: '#/components/schemas/Part'
        fromUser:
          $ref: '#/components/schemas/User'
        toUser:
          $ref: '#/components/schemas/User'
        transferType:
          type: string
          enum: [sale, gift, replacement]
        status:
          type: string
          enum: [pending, approved, rejected, completed]
        price:
          type: number
          format: decimal
          nullable: true
        description:
          type: string
          nullable: true
        transferDate:
          type: string
          format: date-time
        approvedBy:
          $ref: '#/components/schemas/User'
          nullable: true
        approvedAt:
          type: string
          format: date-time
          nullable: true
        rejectionReason:
          type: string
          nullable: true
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
                format: uri
              type:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    PaginatedTransfers:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    # Elevator schemas
    Elevator:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: "آسانسور ساختمان تجاری پارک"
        type:
          type: string
          enum: [passenger, freight, residential, commercial]
        status:
          type: string
          enum: [active, inactive, under_maintenance]
        capacity:
          type: integer
          example: 8
        maxWeight:
          type: number
          format: decimal
          example: 630
        floors:
          type: integer
          example: 10
        speed:
          type: number
          format: decimal
          example: 1.5
        installationDate:
          type: string
          format: date
        lastMaintenanceDate:
          type: string
          format: date
          nullable: true
        nextMaintenanceDate:
          type: string
          format: date
          nullable: true
        manufacturer:
          type: string
          example: "اتیس"
        model:
          type: string
          example: "Gen2"
        serialNumber:
          type: string
          example: "ELV123456789"
        certificateNumber:
          type: string
          example: "CERT-12345"
          nullable: true
        location:
          type: object
          properties:
            province:
              type: string
            city:
              type: string
            address:
              type: string
            buildingName:
              type: string
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                  format: decimal
                longitude:
                  type: number
                  format: decimal
              nullable: true
        owner:
          $ref: '#/components/schemas/User'
        installer:
          type: object
          properties:
            companyName:
              type: string
            licenseNumber:
              type: string
            contactInfo:
              type: object
              properties:
                phone:
                  type: string
                email:
                  type: string
          nullable: true
        specifications:
          type: object
          properties:
            controlSystem:
              type: string
            driveType:
              type: string
            doorType:
              type: string
            cabinMaterial:
              type: string
            emergencyFeatures:
              type: array
              items:
                type: string
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
                format: uri
              type:
                type: string
                enum: [installation_permit, operation_permit, insurance, manual, other]
        images:
          type: array
          items:
            type: string
            format: uri
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateElevatorRequest:
      type: object
      required: [name, type, capacity, maxWeight, floors, manufacturer, serialNumber, province, city, address]
      properties:
        name:
          type: string
          minLength: 3
        type:
          type: string
          enum: [passenger, freight, residential, commercial]
        capacity:
          type: integer
          minimum: 1
        maxWeight:
          type: number
          format: decimal
          minimum: 0
        floors:
          type: integer
          minimum: 2
        speed:
          type: number
          format: decimal
        installationDate:
          type: string
          format: date
        manufacturer:
          type: string
        model:
          type: string
        serialNumber:
          type: string
        province:
          type: string
        city:
          type: string
        address:
          type: string
        buildingName:
          type: string
        coordinates:
          type: object
          properties:
            latitude:
              type: number
              format: decimal
            longitude:
              type: number
              format: decimal
        installer:
          type: object
          properties:
            companyName:
              type: string
            licenseNumber:
              type: string
            contactInfo:
              type: object
              properties:
                phone:
                  type: string
                email:
                  type: string
        specifications:
          type: object
          properties:
            controlSystem:
              type: string
            driveType:
              type: string
            doorType:
              type: string
            cabinMaterial:
              type: string
            emergencyFeatures:
              type: array
              items:
                type: string

    UpdateElevatorRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 3
        status:
          type: string
          enum: [active, inactive, under_maintenance]
        lastMaintenanceDate:
          type: string
          format: date
        nextMaintenanceDate:
          type: string
          format: date
        certificateNumber:
          type: string
        address:
          type: string
        buildingName:
          type: string
        coordinates:
          type: object
          properties:
            latitude:
              type: number
              format: decimal
            longitude:
              type: number
              format: decimal
        installer:
          type: object
          properties:
            companyName:
              type: string
            licenseNumber:
              type: string
            contactInfo:
              type: object
              properties:
                phone:
                  type: string
                email:
                  type: string
        specifications:
          type: object
          properties:
            controlSystem:
              type: string
            driveType:
              type: string
            doorType:
              type: string
            cabinMaterial:
              type: string
            emergencyFeatures:
              type: array
              items:
                type: string

    ElevatorPart:
      type: object
      properties:
        id:
          type: string
          format: uuid
        elevator:
          $ref: '#/components/schemas/Elevator'
        part:
          $ref: '#/components/schemas/Part'
        installationDate:
          type: string
          format: date
        removalDate:
          type: string
          format: date
          nullable: true
        status:
          type: string
          enum: [installed, removed, replaced]
        installedBy:
          type: string
        notes:
          type: string
          nullable: true
        warrantyInfo:
          type: object
          properties:
            hasWarranty:
              type: boolean
            warrantyPeriod:
              type: integer
            warrantyExpiry:
              type: string
              format: date
        maintenanceHistory:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              type:
                type: string
                enum: [inspection, repair, replacement]
              description:
                type: string
              performedBy:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ElevatorCertificate:
      type: object
      properties:
        elevator:
          $ref: '#/components/schemas/Elevator'
        certificateNumber:
          type: string
        issueDate:
          type: string
          format: date
        expiryDate:
          type: string
          format: date
        issuedBy:
          type: string
        certificateType:
          type: string
          enum: [installation, operation, safety]
        qrCode:
          type: string
        verificationUrl:
          type: string
          format: uri
        installedParts:
          type: array
          items:
            $ref: '#/components/schemas/ElevatorPart'
        inspections:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              inspector:
                type: string
              result:
                type: string
                enum: [passed, failed, conditional]
              notes:
                type: string
        generatedAt:
          type: string
          format: date-time

    PaginatedElevators:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Elevator'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    # Request schemas
    Request:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: "مشکل در عملکرد آسانسور"
        description:
          type: string
          example: "آسانسور صدای غیرطبیعی تولید می‌کند"
        type:
          type: string
          enum: [complaint, suggestion, technical_support, general]
        status:
          type: string
          enum: [pending, in_progress, resolved, closed]
        priority:
          type: string
          enum: [low, medium, high, urgent]
        category:
          type: string
          example: "فنی"
        relatedElevator:
          $ref: '#/components/schemas/Elevator'
          nullable: true
        relatedPart:
          $ref: '#/components/schemas/Part'
          nullable: true
        requester:
          $ref: '#/components/schemas/User'
        assignedTo:
          $ref: '#/components/schemas/User'
          nullable: true
        attachments:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
                format: uri
              type:
                type: string
        responses:
          type: array
          items:
            $ref: '#/components/schemas/RequestResponse'
        tags:
          type: array
          items:
            type: string
        dueDate:
          type: string
          format: date
          nullable: true
        resolvedAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    RequestResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
        author:
          $ref: '#/components/schemas/User'
        isInternal:
          type: boolean
          default: false
        attachments:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
                format: uri
        createdAt:
          type: string
          format: date-time

    CreateRequestRequest:
      type: object
      required: [title, description, type]
      properties:
        title:
          type: string
          minLength: 5
        description:
          type: string
          minLength: 10
        type:
          type: string
          enum: [complaint, suggestion, technical_support, general]
        priority:
          type: string
          enum: [low, medium, high, urgent]
          default: medium
        category:
          type: string
        relatedElevatorId:
          type: string
          format: uuid
        relatedPartId:
          type: string
          format: uuid
        tags:
          type: array
          items:
            type: string
        dueDate:
          type: string
          format: date

    UpdateRequestRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 5
        description:
          type: string
          minLength: 10
        status:
          type: string
          enum: [pending, in_progress, resolved, closed]
        priority:
          type: string
          enum: [low, medium, high, urgent]
        category:
          type: string
        assignedToId:
          type: string
          format: uuid
        tags:
          type: array
          items:
            type: string
        dueDate:
          type: string
          format: date

    PaginatedRequests:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Request'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    # Report schemas
    PartsReport:
      type: object
      properties:
        summary:
          type: object
          properties:
            totalParts:
              type: integer
            availableParts:
              type: integer
            soldParts:
              type: integer
            defectiveParts:
              type: integer
            totalValue:
              type: number
              format: decimal
        byCategory:
          type: array
          items:
            type: object
            properties:
              category:
                type: string
              count:
                type: integer
              value:
                type: number
                format: decimal
        byBrand:
          type: array
          items:
            type: object
            properties:
              brand:
                type: string
              count:
                type: integer
              value:
                type: number
                format: decimal
        byStatus:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              count:
                type: integer
              percentage:
                type: number
                format: decimal
        timeline:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
              addedParts:
                type: integer
              soldParts:
                type: integer
              value:
                type: number
                format: decimal
        generatedAt:
          type: string
          format: date-time

    TransfersReport:
      type: object
      properties:
        summary:
          type: object
          properties:
            totalTransfers:
              type: integer
            completedTransfers:
              type: integer
            pendingTransfers:
              type: integer
            totalValue:
              type: number
              format: decimal
            averageTransferValue:
              type: number
              format: decimal
        byType:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              count:
                type: integer
              value:
                type: number
                format: decimal
        byStatus:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              count:
                type: integer
              percentage:
                type: number
                format: decimal
        timeline:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
              transfers:
                type: integer
              value:
                type: number
                format: decimal
        topUsers:
          type: array
          items:
            type: object
            properties:
              user:
                $ref: '#/components/schemas/User'
              transfersCount:
                type: integer
              totalValue:
                type: number
                format: decimal
        generatedAt:
          type: string
          format: date-time

    ElevatorsReport:
      type: object
      properties:
        summary:
          type: object
          properties:
            totalElevators:
              type: integer
            activeElevators:
              type: integer
            inactiveElevators:
              type: integer
            underMaintenanceElevators:
              type: integer
            averageAge:
              type: number
              format: decimal
        byType:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              count:
                type: integer
              percentage:
                type: number
                format: decimal
        byProvince:
          type: array
          items:
            type: object
            properties:
              province:
                type: string
              count:
                type: integer
              percentage:
                type: number
                format: decimal
        byManufacturer:
          type: array
          items:
            type: object
            properties:
              manufacturer:
                type: string
              count:
                type: integer
              averageAge:
                type: number
                format: decimal
        maintenanceSchedule:
          type: array
          items:
            type: object
            properties:
              month:
                type: string
              dueForMaintenance:
                type: integer
              overdue:
                type: integer
        generatedAt:
          type: string
          format: date-time

    FinancialReport:
      type: object
      properties:
        summary:
          type: object
          properties:
            totalRevenue:
              type: number
              format: decimal
            totalTransactions:
              type: integer
            averageTransactionValue:
              type: number
              format: decimal
            growthRate:
              type: number
              format: decimal
        revenue:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
              revenue:
                type: number
                format: decimal
              transactions:
                type: integer
        byCategory:
          type: array
          items:
            type: object
            properties:
              category:
                type: string
              revenue:
                type: number
                format: decimal
              percentage:
                type: number
                format: decimal
        topProducts:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
              revenue:
                type: number
                format: decimal
              sales:
                type: integer
        generatedAt:
          type: string
          format: date-time

    # System schemas
    SystemSettings:
      type: object
      properties:
        general:
          type: object
          properties:
            siteName:
              type: string
            siteUrl:
              type: string
            adminEmail:
              type: string
            supportPhone:
              type: string
            maintenanceMode:
              type: boolean
            registrationEnabled:
              type: boolean
        notifications:
          type: object
          properties:
            emailEnabled:
              type: boolean
            smsEnabled:
              type: boolean
            pushEnabled:
              type: boolean
            emailProvider:
              type: string
            smsProvider:
              type: string
        security:
          type: object
          properties:
            otpExpiry:
              type: integer
              description: "مدت اعتبار OTP به دقیقه"
            maxLoginAttempts:
              type: integer
            sessionTimeout:
              type: integer
              description: "مدت اعتبار نشست به دقیقه"
            requireEmailVerification:
              type: boolean
            requireMobileVerification:
              type: boolean
        uploads:
          type: object
          properties:
            maxFileSize:
              type: integer
              description: "حداکثر اندازه فایل به بایت"
            allowedImageTypes:
              type: array
              items:
                type: string
            allowedDocumentTypes:
              type: array
              items:
                type: string
        backup:
          type: object
          properties:
            autoBackup:
              type: boolean
            backupInterval:
              type: string
              enum: [daily, weekly, monthly]
            retentionDays:
              type: integer
        updatedAt:
          type: string
          format: date-time

    UpdateSettingsRequest:
      type: object
      properties:
        general:
          type: object
          properties:
            siteName:
              type: string
            siteUrl:
              type: string
            adminEmail:
              type: string
            supportPhone:
              type: string
            maintenanceMode:
              type: boolean
            registrationEnabled:
              type: boolean
        notifications:
          type: object
          properties:
            emailEnabled:
              type: boolean
            smsEnabled:
              type: boolean
            pushEnabled:
              type: boolean
            emailProvider:
              type: string
            smsProvider:
              type: string
        security:
          type: object
          properties:
            otpExpiry:
              type: integer
            maxLoginAttempts:
              type: integer
            sessionTimeout:
              type: integer
            requireEmailVerification:
              type: boolean
            requireMobileVerification:
              type: boolean
        uploads:
          type: object
          properties:
            maxFileSize:
              type: integer
            allowedImageTypes:
              type: array
              items:
                type: string
            allowedDocumentTypes:
              type: array
              items:
                type: string
        backup:
          type: object
          properties:
            autoBackup:
              type: boolean
            backupInterval:
              type: string
              enum: [daily, weekly, monthly]
            retentionDays:
              type: integer

    # Upload schemas
    UploadResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        file:
          type: object
          properties:
            id:
              type: string
              format: uuid
            originalName:
              type: string
            fileName:
              type: string
            url:
              type: string
              format: uri
            size:
              type: integer
            mimeType:
              type: string
            category:
              type: string
        uploadedAt:
          type: string
          format: date-time

    # Geography schemas
    Province:
      type: object
      properties:
        id:
          type: integer
          example: 8
        name:
          type: string
          example: "تهران"
        nameEn:
          type: string
          example: "Tehran"
        code:
          type: string
          example: "TEH"

    City:
      type: object
      properties:
        id:
          type: integer
          example: 301
        name:
          type: string
          example: "تهران"
        nameEn:
          type: string
          example: "Tehran"
        provinceId:
          type: integer
          example: 8

    # Activity schema
    Activity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [user_registered, part_added, transfer_completed, elevator_added, request_submitted]
        description:
          type: string
        user:
          $ref: '#/components/schemas/User'
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
                  description: "شماره موبایل ایرانی (11 رقم شروع با 09)"
                  example: "09123456789"
                captcha:
                  type: string
                  description: "کد امنیتی تصویری (در صورت نیاز)"
                  minLength: 4
                  maxLength: 6
                  example: "abc123"
                clientInfo:
                  type: object
                  description: "اطلاعات کلاینت (اختیاری)"
                  properties:
                    userAgent:
                      type: string
                      description: "User Agent مرورگر"
                      example: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
                    ipAddress:
                      type: string
                      description: "آدرس IP"
                      example: "192.168.1.100"
                    deviceId:
                      type: string
                      description: "شناسه دستگاه"
                      example: "device_12345"
            examples:
              simple_request:
                summary: "درخواست ساده"
                value:
                  mobile: "09123456789"
              with_captcha:
                summary: "با کد امنیتی"
                value:
                  mobile: "09123456789"
                  captcha: "abc123"
      responses:
        '200':
          description: کد OTP با موفقیت ارسال شد
          content:
            application/json:
              schema:
                type: object
                required: [success, message, otpToken]
                properties:
                  success:
                    type: boolean
                    description: "وضعیت موفقیت"
                    example: true
                  message:
                    type: string
                    description: "پیام توضیحی"
                    example: "کد تایید به شماره ۰۹۱۲۳۴۵۶۷۸۹ ارسال شد"
                  otpToken:
                    type: string
                    description: "توکن موقت برای تایید OTP"
                    example: "otp_token_abc123def456"
                  expiryTime:
                    type: integer
                    description: "مدت اعتبار کد (ثانیه)"
                    example: 300
                  remainingAttempts:
                    type: integer
                    description: "تعداد تلاش باقیمانده امروز"
                    example: 2
                  nextRequestAllowed:
                    type: string
                    format: date-time
                    description: "زمان مجاز برای درخواست بعدی"
                    example: "2024-03-15T10:32:00Z"
        '400':
          description: داده‌های ورودی نامعتبر
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid_mobile:
                  summary: "شماره موبایل نامعتبر"
                  value:
                    success: false
                    message: "شماره موبایل نامعتبر است"
                    errors:
                      - field: "mobile"
                        message: "شماره موبایل باید 11 رقم و شروع با 09 باشد"
        '429':
          description: تعداد درخواست‌ها زیاد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                rate_limit:
                  summary: "محدودیت نرخ"
                  value:
                    success: false
                    message: "تعداد درخواست‌های شما بیش از حد مجاز است"

  /auth/verify-otp:
    post:
      tags: [Authentication]
      summary: تایید کد OTP
      description: تایید کد OTP و دریافت توکن دسترسی
      operationId: verifyOtp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [otpToken, otp]
              properties:
                otpToken:
                  type: string
                  example: "temp_token_12345"
                otp:
                  type: string
                  pattern: '^[0-9]{6}$'
                  example: "123456"
      responses:
        '200':
          description: ورود موفق
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken:
                    type: string
                    example: "refresh_token_12345"
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/refresh:
    post:
      tags: [Authentication]
      summary: تمدید توکن
      description: تمدید توکن دسترسی با استفاده از refresh token
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refreshToken]
              properties:
                refreshToken:
                  type: string
                  example: "refresh_token_12345"
      responses:
        '200':
          description: توکن تمدید شد
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken:
                    type: string
                    example: "new_refresh_token_12345"

  /auth/logout:
    post:
      tags: [Authentication]
      summary: خروج از سیستم
      description: خروج کاربر و باطل کردن توکن‌ها
      operationId: logout
      responses:
        '200':
          description: خروج موفق
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "با موفقیت خارج شدید"

  # =============================================================================
  # Dashboard APIs
  # =============================================================================
  /dashboard/admin/stats:
    get:
      tags: [Dashboard]
      summary: آمار داشبورد ادمین
      description: دریافت آمار کلی برای داشبورد ادمین
      operationId: getAdminDashboardStats
      responses:
        '200':
          description: آمار داشبورد
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalUsers:
                    type: integer
                    example: 1250
                  totalParts:
                    type: integer
                    example: 15000
                  totalElevators:
                    type: integer
                    example: 850
                  totalTransfers:
                    type: integer
                    example: 3200
                  pendingRequests:
                    type: integer
                    example: 45
                  monthlyTransfers:
                    type: array
                    items:
                      type: object
                      properties:
                        month:
                          type: string
                          example: "1403/01"
                        count:
                          type: integer
                          example: 120
                  recentActivities:
                    type: array
                    items:
                      $ref: '#/components/schemas/Activity'

  /dashboard/user/stats:
    get:
      tags: [Dashboard]
      summary: آمار داشبورد کاربر
      description: دریافت آمار شخصی برای داشبورد کاربر
      operationId: getUserDashboardStats
      responses:
        '200':
          description: آمار داشبورد کاربر
          content:
            application/json:
              schema:
                type: object
                properties:
                  myParts:
                    type: integer
                    example: 45
                  myElevators:
                    type: integer
                    example: 12
                  myTransfers:
                    type: integer
                    example: 67
                  pendingRequests:
                    type: integer
                    example: 3
                  recentTransfers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transfer'

  # =============================================================================
  # Users Management APIs
  # =============================================================================
  /users:
    get:
      tags: [Users]
      summary: لیست کاربران
      description: دریافت لیست کاربران با امکان فیلتر و جستجو
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Search'
        - name: role
          in: query
          schema:
            type: string
            enum: [admin, user, all]
            default: all
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, banned, all]
            default: all
        - name: province
          in: query
          schema:
            type: string
            example: "تهران"
      responses:
        '200':
          description: لیست کاربران
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUsers'

    post:
      tags: [Users]
      summary: ایجاد کاربر جدید
      description: ایجاد کاربر جدید توسط ادمین
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: کاربر ایجاد شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      tags: [Users]
      summary: جزئیات کاربر
      description: دریافت اطلاعات کامل یک کاربر
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: اطلاعات کاربر
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    put:
      tags: [Users]
      summary: ویرایش کاربر
      description: ویرایش اطلاعات کاربر توسط ادمین
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: کاربر ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    delete:
      tags: [Users]
      summary: حذف کاربر
      description: حذف کاربر از سیستم
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '204':
          description: کاربر حذف شد

  /users/{userId}/toggle-status:
    patch:
      tags: [Users]
      summary: تغییر وضعیت کاربر
      description: فعال/غیرفعال کردن کاربر
      operationId: toggleUserStatus
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [status]
              properties:
                status:
                  type: string
                  enum: [active, inactive, banned]
                reason:
                  type: string
                  example: "نقض قوانین"
      responses:
        '200':
          description: وضعیت تغییر کرد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  # =============================================================================
  # Parts Management APIs
  # =============================================================================
  /parts:
    get:
      tags: [Parts]
      summary: دریافت لیست قطعات
      description: |
        دریافت لیست قطعات با امکانات پیشرفته فیلتر، جستجو و مرتب‌سازی
        
        ### قابلیت‌های جستجو:
        - جستجو در نام، برند، مدل، شماره سریال
        - فیلتر بر اساس دسته‌بندی، وضعیت، مالک
        - فیلتر بر اساس بازه قیمت و تاریخ
        - مرتب‌سازی بر اساس فیلدهای مختلف
        
        ### مثال استفاده:
        ```
        GET /parts?search=موتور&status=available&minPrice=1000000&sort=createdAt:desc
        ```
      operationId: getParts
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Search'
        - name: categoryId
          in: query
          description: "فیلتر بر اساس شناسه دسته‌بندی"
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
        - name: category
          in: query
          description: "فیلتر بر اساس نام دسته‌بندی"
          schema:
            type: string
            example: "موتور"
        - name: brand
          in: query
          description: "فیلتر بر اساس برند"
          schema:
            type: string
            example: "اتیس"
        - name: manufacturer
          in: query
          description: "فیلتر بر اساس سازنده"
          schema:
            type: string
            example: "شرکت اتیس ایران"
        - name: status
          in: query
          description: "فیلتر بر اساس وضعیت قطعه"
          schema:
            type: string
            enum: [available, sold, installed, defective, under_repair, reserved, all]
            default: all
            example: "available"
        - name: condition
          in: query
          description: "فیلتر بر اساس شرایط فیزیکی"
          schema:
            type: string
            enum: [new, excellent, good, fair, poor, damaged, all]
            default: all
            example: "new"
        - name: ownerId
          in: query
          description: "فیلتر بر اساس شناسه مالک"
          schema:
            type: string
            format: uuid
            example: "456e7890-e89b-12d3-a456-426614174001"
        - name: locationProvince
          in: query
          description: "فیلتر بر اساس استان محل قرارگیری"
          schema:
            type: string
            example: "تهران"
        - name: locationCity
          in: query
          description: "فیلتر بر اساس شهر محل قرارگیری"
          schema:
            type: string
            example: "تهران"
        - name: minPrice
          in: query
          description: "حداقل قیمت (ریال)"
          schema:
            type: number
            format: decimal
            minimum: 0
            example: 1000000
        - name: maxPrice
          in: query
          description: "حداکثر قیمت (ریال)"
          schema:
            type: number
            format: decimal
            minimum: 0
            example: 50000000
        - name: hasWarranty
          in: query
          description: "فیلتر قطعات دارای گارانتی"
          schema:
            type: boolean
            example: true
        - name: manufacturingDateFrom
          in: query
          description: "تاریخ تولید از"
          schema:
            type: string
            format: date
            example: "1400-01-01"
        - name: manufacturingDateTo
          in: query
          description: "تاریخ تولید تا"
          schema:
            type: string
            format: date
            example: "1403-12-29"
        - name: tags
          in: query
          description: "فیلتر بر اساس برچسب‌ها (جدا شده با کاما)"
          schema:
            type: string
            example: "اولویت_بالا,وارداتی"
        - name: sort
          in: query
          description: "مرتب‌سازی (field:direction)"
          schema:
            type: string
            enum: [name:asc, name:desc, createdAt:asc, createdAt:desc, currentPrice:asc, currentPrice:desc, manufacturingDate:asc, manufacturingDate:desc]
            default: "createdAt:desc"
            example: "currentPrice:asc"
        - name: includeInactive
          in: query
          description: "شامل قطعات غیرفعال"
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: لیست قطعات دریافت شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedParts'
              examples:
                success_response:
                  summary: "پاسخ موفق"
                  value:
                    data:
                      - id: "550e8400-e29b-41d4-a716-446655440001"
                        name: "موتور آسانسور اتیس"
                        serialNumber: "SN123456789"
                        brand: "اتیس"
                        status: "available"
                        currentPrice: 18000000
                        currency: "IRR"
                        condition: "new"
                        categoryId: "123e4567-e89b-12d3-a456-426614174000"
                        ownerId: "456e7890-e89b-12d3-a456-426614174001"
                        createdAt: "2024-03-15T10:30:00Z"
                    meta:
                      page: 1
                      limit: 20
                      total: 150
                      totalPages: 8
                      hasNext: true
                      hasPrev: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

    post:
      tags: [Parts]
      summary: ثبت قطعه جدید
      description: |
        ثبت قطعه جدید در سیستم با اطلاعات کامل
        
        ### نکات مهم:
        - شماره سریال باید منحصر به فرد باشد
        - categoryId باید معتبر باشد
        - برای قطعات وارداتی، اطلاعات گمرکی الزامی است
        - QR کد به صورت خودکار تولید می‌شود
        
        ### مثال استفاده:
        ```json
        {
          "name": "موتور آسانسور اتیس",
          "serialNumber": "SN123456789",
          "categoryId": "123e4567-e89b-12d3-a456-426614174000",
          "brand": "اتیس",
          "status": "available",
          "currentPrice": 18000000
        }
        ```
      operationId: createPart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartRequest'
            examples:
              simple_motor:
                summary: "موتور ساده"
                value:
                  name: "موتور آسانسور اتیس"
                  serialNumber: "SN123456789"
                  categoryId: "123e4567-e89b-12d3-a456-426614174000"
                  brand: "اتیس"
                  status: "available"
                  currentPrice: 18000000
                  condition: "new"
              complete_part:
                summary: "قطعه کامل با جزئیات"
                value:
                  name: "موتور آسانسور اتیس پیشرفته"
                  nameEn: "Otis Advanced Elevator Motor"
                  description: "موتور آسانسور با قدرت 15 کیلووات مناسب برای ساختمان‌های بلند"
                  serialNumber: "SN987654321"
                  partNumber: "PN-MOT-015-ADV"
                  categoryId: "123e4567-e89b-12d3-a456-426614174000"
                  brand: "اتیس"
                  manufacturer: "شرکت اتیس بین‌الملل"
                  model: "ATL-1500-PRO"
                  status: "available"
                  condition: "new"
                  manufacturingDate: "1402-05-15"
                  currentPrice: 25000000
                  pricePerUnit: 25000000
                  currency: "IRR"
                  weight: 75.5
                  dimensions:
                    length: 120.0
                    width: 80.0
                    height: 150.0
                    unit: "cm"
                  specifications:
                    - name: "قدرت"
                      nameEn: "Power"
                      value: "15"
                      unit: "کیلووات"
                      type: "number"
                    - name: "ولتاژ"
                      nameEn: "Voltage"
                      value: "380"
                      unit: "ولت"
                      type: "number"
                    - name: "دور در دقیقه"
                      nameEn: "RPM"
                      value: "1450"
                      unit: "دور/دقیقه"
                      type: "number"
                  location:
                    type: "warehouse"
                    warehouse: "انبار مرکزی تهران"
                    shelf: "قفسه A-15-03"
                    province: "تهران"
                    city: "تهران"
                  warranty:
                    hasWarranty: true
                    warrantyPeriod: 24
                    warrantyProvider: "شرکت اتیس ایران"
                    warrantyStartDate: "1402-05-15"
                    warrantyTerms: "گارانتی شامل قطعات و کارکرد می‌باشد"
                  tags: ["اولویت_بالا", "موتور_پیشرفته", "گارانتی_دار"]
                  notes: "مناسب برای ساختمان‌های بالای 15 طبقه"
                  productType: "manufactured"
                  manufacturerCountry: "ایران"
      responses:
        '201':
          description: قطعه با موفقیت ثبت شد
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Part'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "قطعه با موفقیت ثبت شد"
              examples:
                created_part:
                  summary: "قطعه ایجاد شده"
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440001"
                    name: "موتور آسانسور اتیس"
                    serialNumber: "SN123456789"
                    qrCode: "QR_550e8400_e29b_41d4_a716_446655440001"
                    brand: "اتیس"
                    status: "available"
                    currentPrice: 18000000
                    createdAt: "2024-03-15T10:30:00Z"
                    message: "قطعه با موفقیت ثبت شد"
        '400':
          description: داده‌های ورودی نامعتبر
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                duplicate_serial:
                  summary: "شماره سریال تکراری"
                  value:
                    success: false
                    message: "شماره سریال تکراری است"
                    errors:
                      - field: "serialNumber"
                        message: "این شماره سریال قبلاً استفاده شده است"
                invalid_category:
                  summary: "دسته‌بندی نامعتبر"
                  value:
                    success: false
                    message: "دسته‌بندی انتخاب شده معتبر نیست"
                    errors:
                      - field: "categoryId"
                        message: "شناسه دسته‌بندی وجود ندارد"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          description: تداخل در داده‌ها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                conflict:
                  summary: "تداخل شماره سریال"
                  value:
                    success: false
                    message: "شماره سریال از قبل موجود است"

  /parts/{partId}:
    get:
      tags: [Parts]
      summary: جزئیات قطعه
      description: دریافت اطلاعات کامل یک قطعه
      operationId: getPart
      parameters:
        - $ref: '#/components/parameters/PartId'
      responses:
        '200':
          description: اطلاعات قطعه
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Part'

    put:
      tags: [Parts]
      summary: ویرایش قطعه
      description: ویرایش اطلاعات قطعه
      operationId: updatePart
      parameters:
        - $ref: '#/components/parameters/PartId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePartRequest'
      responses:
        '200':
          description: قطعه ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Part'

    delete:
      tags: [Parts]
      summary: حذف قطعه
      description: حذف قطعه از سیستم
      operationId: deletePart
      parameters:
        - $ref: '#/components/parameters/PartId'
      responses:
        '204':
          description: قطعه حذف شد

  /parts/categories:
    get:
      tags: [Parts]
      summary: دسته‌بندی قطعات
      description: دریافت لیست دسته‌بندی‌های قطعات
      operationId: getPartCategories
      responses:
        '200':
          description: لیست دسته‌بندی‌ها
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartCategory'

    post:
      tags: [Parts]
      summary: ایجاد دسته‌بندی جدید
      description: ایجاد دسته‌بندی جدید برای قطعات
      operationId: createPartCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, nameEn]
              properties:
                name:
                  type: string
                  example: "موتور آسانسور"
                nameEn:
                  type: string
                  example: "Elevator Motor"
                description:
                  type: string
                  example: "موتورهای مختلف آسانسور"
                parentId:
                  type: string
                  format: uuid
                  nullable: true
                specifications:
                  type: array
                  items:
                    $ref: '#/components/schemas/SpecificationDefinition'
      responses:
        '201':
          description: دسته‌بندی ایجاد شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartCategory'

  /parts/{partId}/transfer:
    post:
      tags: [Parts]
      summary: ایجاد درخواست انتقال قطعه
      description: |
        ایجاد درخواست انتقال مالکیت قطعه به کاربر دیگر
        
        ### انواع انتقال:
        - **فروش (sale)**: انتقال با دریافت وجه - قیمت الزامی
        - **هدیه (gift)**: انتقال رایگان - قیمت صفر
        - **جایگزینی (replacement)**: تعویض با قطعه دیگر
        - **انتقال داخلی (internal)**: بین شعب یک شرکت
        
        ### فرآیند تایید:
        1. درخواست انتقال ثبت می‌شود (وضعیت: pending)
        2. ادمین درخواست را بررسی می‌کند
        3. در صورت تایید، مالکیت منتقل می‌شود
        4. QR کد و شناسنامه به‌روزرسانی می‌شود
        
        ### مثال استفاده:
        ```json
        {
          "newOwnerId": "456e7890-e89b-12d3-a456-426614174001",
          "transferType": "sale",
          "price": 15000000,
          "description": "فروش موتور آسانسور"
        }
        ```
      operationId: transferPart
      parameters:
        - $ref: '#/components/parameters/PartId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [newOwnerId, transferType]
              properties:
                newOwnerId:
                  type: string
                  format: uuid
                  description: "شناسه مالک جدید (الزامی)"
                  example: "456e7890-e89b-12d3-a456-426614174001"
                transferType:
                  type: string
                  description: "نوع انتقال (الزامی)"
                  enum: [sale, gift, replacement, internal]
                  example: "sale"
                price:
                  type: number
                  format: decimal
                  description: "قیمت انتقال (ریال) - برای فروش الزامی"
                  minimum: 0
                  example: 15000000
                  nullable: true
                currency:
                  type: string
                  description: "واحد پولی"
                  enum: [IRR, USD, EUR]
                  default: "IRR"
                  example: "IRR"
                description:
                  type: string
                  description: "توضیحات انتقال"
                  maxLength: 500
                  example: "فروش قطعه موتور به دلیل تغییر پروژه"
                reason:
                  type: string
                  description: "دلیل انتقال"
                  enum: [sale, upgrade, defect, project_change, company_transfer, other]
                  example: "sale"
                transferDate:
                  type: string
                  format: date
                  description: "تاریخ مورد نظر برای انتقال (پیش‌فرض: امروز)"
                  example: "1403-02-15"
                urgentTransfer:
                  type: boolean
                  description: "آیا انتقال فوری است"
                  default: false
                  example: false
                paymentMethod:
                  type: string
                  description: "روش پرداخت (برای فروش)"
                  enum: [cash, bank_transfer, check, installment, other]
                  example: "bank_transfer"
                paymentDetails:
                  type: object
                  description: "جزئیات پرداخت"
                  properties:
                    bankAccount:
                      type: string
                      description: "شماره حساب"
                      example: "6037-9919-1234-5678"
                    trackingNumber:
                      type: string
                      description: "شماره پیگیری"
                      example: "TRK123456789"
                    dueDate:
                      type: string
                      format: date
                      description: "سررسید (برای چک)"
                      example: "1403-03-01"
                  nullable: true
                documents:
                  type: array
                  description: "مستندات ضمیمه انتقال"
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "قرارداد فروش"
                      url:
                        type: string
                        format: uri
                        example: "https://elevatorid.ieeu.ir/uploads/contracts/contract123.pdf"
                      type:
                        type: string
                        enum: [contract, invoice, receipt, warranty_transfer, other]
                        example: "contract"
                newLocation:
                  type: object
                  description: "موقعیت جدید قطعه پس از انتقال"
                  properties:
                    type:
                      type: string
                      enum: [warehouse, installation_site, service_center]
                      example: "warehouse"
                    warehouse:
                      type: string
                      example: "انبار شرکت خریدار"
                    address:
                      type: string
                      example: "اصفهان، خیابان چهارباغ، پلاک 567"
                    province:
                      type: string
                      example: "اصفهان"
                    city:
                      type: string
                      example: "اصفهان"
                    notes:
                      type: string
                      example: "انتقال به انبار مرکزی"
                notifications:
                  type: object
                  description: "تنظیمات اطلاع‌رسانی"
                  properties:
                    notifyNewOwner:
                      type: boolean
                      description: "اطلاع‌رسانی به مالک جدید"
                      default: true
                    notifyAdmin:
                      type: boolean
                      description: "اطلاع‌رسانی به ادمین"
                      default: true
                    smsNotification:
                      type: boolean
                      description: "اطلاع‌رسانی پیامکی"
                      default: false
                  nullable: true
            examples:
              sale_transfer:
                summary: "انتقال فروش"
                value:
                  newOwnerId: "456e7890-e89b-12d3-a456-426614174001"
                  transferType: "sale"
                  price: 15000000
                  currency: "IRR"
                  description: "فروش موتور آسانسور به شرکت نصب سریع"
                  reason: "sale"
                  paymentMethod: "bank_transfer"
                  paymentDetails:
                    bankAccount: "6037-9919-1234-5678"
                    trackingNumber: "TRK987654321"
                  newLocation:
                    type: "warehouse"
                    warehouse: "انبار شرکت خریدار"
                    province: "تهران"
                    city: "تهران"
              gift_transfer:
                summary: "انتقال هدیه"
                value:
                  newOwnerId: "789e0123-e89b-12d3-a456-426614174002"
                  transferType: "gift"
                  price: 0
                  description: "اهدای قطعه در قبال خدمات ارائه شده"
                  reason: "other"
              internal_transfer:
                summary: "انتقال داخلی"
                value:
                  newOwnerId: "321e6543-e89b-12d3-a456-426614174003"
                  transferType: "internal"
                  description: "انتقال بین شعب تهران و اصفهان"
                  reason: "company_transfer"
                  newLocation:
                    type: "warehouse"
                    warehouse: "انبار شعبه اصفهان"
                    province: "اصفهان"
                    city: "اصفهان"
      responses:
        '201':
          description: درخواست انتقال ایجاد شد
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Transfer'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "درخواست انتقال ثبت شد و در انتظار تایید ادمین است"
                      transferId:
                        type: string
                        format: uuid
                        example: "abc12345-e89b-12d3-a456-426614174000"
              examples:
                transfer_created:
                  summary: "انتقال ایجاد شده"
                  value:
                    id: "abc12345-e89b-12d3-a456-426614174000"
                    transferType: "sale"
                    price: 15000000
                    status: "pending"
                    transferDate: "2024-03-15T10:30:00Z"
                    description: "فروش موتور آسانسور"
                    message: "درخواست انتقال ثبت شد و در انتظار تایید ادمین است"
        '400':
          description: داده‌های ورودی نامعتبر
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid_owner:
                  summary: "مالک نامعتبر"
                  value:
                    success: false
                    message: "مالک جدید معتبر نیست"
                    errors:
                      - field: "newOwnerId"
                        message: "کاربر با این شناسه وجود ندارد"
                missing_price:
                  summary: "قیمت مفقود برای فروش"
                  value:
                    success: false
                    message: "برای انتقال نوع فروش، قیمت الزامی است"
                    errors:
                      - field: "price"
                        message: "قیمت برای فروش باید مشخص شود"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: عدم دسترسی
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                not_owner:
                  summary: "عدم مالکیت"
                  value:
                    success: false
                    message: "فقط مالک قطعه می‌تواند آن را منتقل کند"
        '404':
          description: قطعه یافت نشد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                part_not_found:
                  summary: "قطعه یافت نشد"
                  value:
                    success: false
                    message: "قطعه با این شناسه یافت نشد"
        '409':
          description: تداخل در درخواست
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                pending_transfer:
                  summary: "انتقال در انتظار"
                  value:
                    success: false
                    message: "برای این قطعه درخواست انتقال در انتظار تایید وجود دارد"

  /parts/{partId}/qr-code:
    get:
      tags: [Parts]
      summary: QR کد قطعه
      description: تولید QR کد برای قطعه
      operationId: getPartQRCode
      parameters:
        - $ref: '#/components/parameters/PartId'
        - name: size
          in: query
          schema:
            type: integer
            default: 200
            minimum: 100
            maximum: 500
      responses:
        '200':
          description: QR کد
          content:
            image/png:
              schema:
                type: string
                format: binary

  # =============================================================================
  # Transfers Management APIs
  # =============================================================================
  /transfers:
    get:
      tags: [Transfers]
      summary: لیست انتقال‌ها
      description: دریافت لیست انتقال‌های قطعات
      operationId: getTransfers
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Search'
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, approved, rejected, completed, all]
            default: all
        - name: transferType
          in: query
          schema:
            type: string
            enum: [sale, gift, replacement, all]
            default: all
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-01-01"
        - name: toDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-12-29"
      responses:
        '200':
          description: لیست انتقال‌ها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransfers'

  /transfers/{transferId}:
    get:
      tags: [Transfers]
      summary: جزئیات انتقال
      description: دریافت اطلاعات کامل یک انتقال
      operationId: getTransfer
      parameters:
        - $ref: '#/components/parameters/TransferId'
      responses:
        '200':
          description: اطلاعات انتقال
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'

  /transfers/{transferId}/approve:
    post:
      tags: [Transfers]
      summary: تایید انتقال
      description: تایید انتقال توسط ادمین
      operationId: approveTransfer
      parameters:
        - $ref: '#/components/parameters/TransferId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: string
                  example: "انتقال تایید شد"
      responses:
        '200':
          description: انتقال تایید شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'

  /transfers/{transferId}/reject:
    post:
      tags: [Transfers]
      summary: رد انتقال
      description: رد انتقال توسط ادمین
      operationId: rejectTransfer
      parameters:
        - $ref: '#/components/parameters/TransferId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [reason]
              properties:
                reason:
                  type: string
                  example: "اطلاعات ناقص"
      responses:
        '200':
          description: انتقال رد شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'

  # =============================================================================
  # Elevators Management APIs
  # =============================================================================
  /elevators:
    get:
      tags: [Elevators]
      summary: لیست آسانسورها
      description: دریافت لیست آسانسورها با امکان فیلتر و جستجو
      operationId: getElevators
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Search'
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, under_maintenance, all]
            default: all
        - name: type
          in: query
          schema:
            type: string
            enum: [passenger, freight, residential, commercial, all]
            default: all
        - name: province
          in: query
          schema:
            type: string
            example: "تهران"
        - name: city
          in: query
          schema:
            type: string
            example: "تهران"
      responses:
        '200':
          description: لیست آسانسورها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedElevators'

    post:
      tags: [Elevators]
      summary: ثبت آسانسور جدید
      description: ثبت آسانسور جدید در سیستم
      operationId: createElevator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateElevatorRequest'
      responses:
        '201':
          description: آسانسور ثبت شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Elevator'

  /elevators/{elevatorId}:
    get:
      tags: [Elevators]
      summary: جزئیات آسانسور
      description: دریافت اطلاعات کامل یک آسانسور
      operationId: getElevator
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
      responses:
        '200':
          description: اطلاعات آسانسور
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Elevator'

    put:
      tags: [Elevators]
      summary: ویرایش آسانسور
      description: ویرایش اطلاعات آسانسور
      operationId: updateElevator
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateElevatorRequest'
      responses:
        '200':
          description: آسانسور ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Elevator'

    delete:
      tags: [Elevators]
      summary: حذف آسانسور
      description: حذف آسانسور از سیستم
      operationId: deleteElevator
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
      responses:
        '204':
          description: آسانسور حذف شد

  /elevators/{elevatorId}/certificate:
    get:
      tags: [Elevators]
      summary: شناسنامه آسانسور
      description: دریافت شناسنامه آسانسور
      operationId: getElevatorCertificate
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
        - name: format
          in: query
          schema:
            type: string
            enum: [json, pdf]
            default: json
      responses:
        '200':
          description: شناسنامه آسانسور
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorCertificate'
            application/pdf:
              schema:
                type: string
                format: binary

  /elevators/{elevatorId}/parts:
    get:
      tags: [Elevators]
      summary: قطعات آسانسور
      description: دریافت لیست قطعات نصب شده در آسانسور
      operationId: getElevatorParts
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
      responses:
        '200':
          description: لیست قطعات
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElevatorPart'

    post:
      tags: [Elevators]
      summary: افزودن قطعه به آسانسور
      description: نصب قطعه جدید در آسانسور
      operationId: addPartToElevator
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [partId, installationDate]
              properties:
                partId:
                  type: string
                  format: uuid
                installationDate:
                  type: string
                  format: date
                  example: "1403-05-15"
                installedBy:
                  type: string
                  example: "شرکت نصب آسانسور"
                notes:
                  type: string
                  example: "نصب قطعه موتور جدید"
      responses:
        '201':
          description: قطعه به آسانسور اضافه شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorPart'

  /elevators/{elevatorId}/parts/{partId}/replace:
    post:
      tags: [Elevators]
      summary: تعویض قطعه آسانسور
      description: تعویض قطعه موجود با قطعه جدید
      operationId: replaceElevatorPart
      parameters:
        - $ref: '#/components/parameters/ElevatorId'
        - $ref: '#/components/parameters/PartId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [newPartId, replacementDate, reason]
              properties:
                newPartId:
                  type: string
                  format: uuid
                replacementDate:
                  type: string
                  format: date
                  example: "1403-06-01"
                reason:
                  type: string
                  example: "خرابی قطعه قدیمی"
                installedBy:
                  type: string
                  example: "تکنسین تعمیرات"
                notes:
                  type: string
                  example: "تعویض به دلیل فرسودگی"
      responses:
        '200':
          description: قطعه تعویض شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorPart'

  # =============================================================================
  # Requests Management APIs
  # =============================================================================
  /requests:
    get:
      tags: [Requests]
      summary: لیست درخواست‌ها
      description: دریافت لیست درخواست‌ها و شکایات
      operationId: getRequests
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Search'
        - name: type
          in: query
          schema:
            type: string
            enum: [complaint, suggestion, technical_support, general, all]
            default: all
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, in_progress, resolved, closed, all]
            default: all
        - name: priority
          in: query
          schema:
            type: string
            enum: [low, medium, high, urgent, all]
            default: all
      responses:
        '200':
          description: لیست درخواست‌ها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRequests'

    post:
      tags: [Requests]
      summary: ثبت درخواست جدید
      description: ثبت درخواست یا شکایت جدید
      operationId: createRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestRequest'
      responses:
        '201':
          description: درخواست ثبت شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'

  /requests/{requestId}:
    get:
      tags: [Requests]
      summary: جزئیات درخواست
      description: دریافت اطلاعات کامل یک درخواست
      operationId: getRequest
      parameters:
        - $ref: '#/components/parameters/RequestId'
      responses:
        '200':
          description: اطلاعات درخواست
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'

    put:
      tags: [Requests]
      summary: ویرایش درخواست
      description: ویرایش درخواست توسط کاربر یا ادمین
      operationId: updateRequest
      parameters:
        - $ref: '#/components/parameters/RequestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequestRequest'
      responses:
        '200':
          description: درخواست ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'

  /requests/{requestId}/respond:
    post:
      tags: [Requests]
      summary: پاسخ به درخواست
      description: ارسال پاسخ به درخواست توسط ادمین
      operationId: respondToRequest
      parameters:
        - $ref: '#/components/parameters/RequestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [message]
              properties:
                message:
                  type: string
                  example: "درخواست شما بررسی و اقدام لازم انجام شد"
                status:
                  type: string
                  enum: [in_progress, resolved, closed]
                  example: "resolved"
                attachments:
                  type: array
                  items:
                    type: string
                    format: uri
      responses:
        '201':
          description: پاسخ ارسال شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'

  # =============================================================================
  # Reports APIs
  # =============================================================================
  /reports/parts:
    get:
      tags: [Reports]
      summary: گزارش قطعات
      description: گزارش آماری قطعات
      operationId: getPartsReport
      parameters:
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-01-01"
        - name: toDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-12-29"
        - name: category
          in: query
          schema:
            type: string
        - name: groupBy
          in: query
          schema:
            type: string
            enum: [category, brand, status, month]
            default: category
        - name: format
          in: query
          schema:
            type: string
            enum: [json, excel, pdf]
            default: json
      responses:
        '200':
          description: گزارش قطعات
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartsReport'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary

  /reports/transfers:
    get:
      tags: [Reports]
      summary: گزارش انتقال‌ها
      description: گزارش آماری انتقال‌ها
      operationId: getTransfersReport
      parameters:
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-01-01"
        - name: toDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-12-29"
        - name: transferType
          in: query
          schema:
            type: string
            enum: [sale, gift, replacement]
        - name: groupBy
          in: query
          schema:
            type: string
            enum: [type, status, month, user]
            default: month
        - name: format
          in: query
          schema:
            type: string
            enum: [json, excel, pdf]
            default: json
      responses:
        '200':
          description: گزارش انتقال‌ها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransfersReport'

  /reports/elevators:
    get:
      tags: [Reports]
      summary: گزارش آسانسورها
      description: گزارش آماری آسانسورها
      operationId: getElevatorsReport
      parameters:
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-01-01"
        - name: toDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-12-29"
        - name: type
          in: query
          schema:
            type: string
            enum: [passenger, freight, residential, commercial]
        - name: province
          in: query
          schema:
            type: string
        - name: groupBy
          in: query
          schema:
            type: string
            enum: [type, status, province, month]
            default: province
        - name: format
          in: query
          schema:
            type: string
            enum: [json, excel, pdf]
            default: json
      responses:
        '200':
          description: گزارش آسانسورها
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElevatorsReport'

  /reports/financial:
    get:
      tags: [Reports]
      summary: گزارش مالی
      description: گزارش مالی انتقال‌ها و فروش‌ها
      operationId: getFinancialReport
      parameters:
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-01-01"
        - name: toDate
          in: query
          schema:
            type: string
            format: date
            example: "1403-12-29"
        - name: groupBy
          in: query
          schema:
            type: string
            enum: [month, quarter, year, category]
            default: month
        - name: format
          in: query
          schema:
            type: string
            enum: [json, excel, pdf]
            default: json
      responses:
        '200':
          description: گزارش مالی
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialReport'

  # =============================================================================
  # Profile APIs
  # =============================================================================
  /profile:
    get:
      tags: [Profile]
      summary: اطلاعات پروفایل
      description: دریافت اطلاعات پروفایل کاربر جاری
      operationId: getProfile
      responses:
        '200':
          description: اطلاعات پروفایل
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

    put:
      tags: [Profile]
      summary: ویرایش پروفایل
      description: ویرایش اطلاعات پروفایل کاربر
      operationId: updateProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: پروفایل ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /profile/avatar:
    post:
      tags: [Profile]
      summary: آپلود آواتار
      description: آپلود تصویر آواتار کاربر
      operationId: uploadAvatar
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [avatar]
              properties:
                avatar:
                  type: string
                  format: binary
                  description: فایل تصویر (PNG, JPG, JPEG - حداکثر 2MB)
      responses:
        '200':
          description: آواتار آپلود شد
          content:
            application/json:
              schema:
                type: object
                properties:
                  avatarUrl:
                    type: string
                    format: uri
                    example: "https://elevatorid.ieeu.ir/uploads/avatars/user123.jpg"

  /profile/change-password:
    post:
      tags: [Profile]
      summary: تغییر رمز عبور
      description: تغییر رمز عبور کاربر
      operationId: changePassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [currentPassword, newPassword]
              properties:
                currentPassword:
                  type: string
                  example: "current123"
                newPassword:
                  type: string
                  minLength: 8
                  example: "newpassword123"
      responses:
        '200':
          description: رمز عبور تغییر کرد
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "رمز عبور با موفقیت تغییر کرد"

  # =============================================================================
  # Settings APIs
  # =============================================================================
  /settings:
    get:
      tags: [Settings]
      summary: تنظیمات سیستم
      description: دریافت تنظیمات سیستم
      operationId: getSettings
      responses:
        '200':
          description: تنظیمات سیستم
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemSettings'

    put:
      tags: [Settings]
      summary: ویرایش تنظیمات
      description: ویرایش تنظیمات سیستم توسط ادمین
      operationId: updateSettings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingsRequest'
      responses:
        '200':
          description: تنظیمات ویرایش شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemSettings'

  /settings/backup:
    post:
      tags: [Settings]
      summary: پشتیبان‌گیری
      description: ایجاد پشتیبان از سیستم
      operationId: createBackup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                includeFiles:
                  type: boolean
                  default: true
                includeLogs:
                  type: boolean
                  default: false
      responses:
        '200':
          description: پشتیبان ایجاد شد
          content:
            application/json:
              schema:
                type: object
                properties:
                  backupId:
                    type: string
                    example: "backup_1403_05_15_123456"
                  downloadUrl:
                    type: string
                    format: uri
                    example: "https://elevatorid.ieeu.ir/downloads/backups/backup_1403_05_15_123456.zip"

  # =============================================================================
  # Upload APIs
  # =============================================================================
  /upload/image:
    post:
      tags: [Upload]
      summary: آپلود تصویر
      description: آپلود فایل تصویر
      operationId: uploadImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [file]
              properties:
                file:
                  type: string
                  format: binary
                  description: فایل تصویر (PNG, JPG, JPEG, WEBP - حداکثر 10MB)
                category:
                  type: string
                  enum: [part, elevator, user, document]
                  default: document
      responses:
        '200':
          description: تصویر آپلود شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'

  /upload/document:
    post:
      tags: [Upload]
      summary: آپلود مستند
      description: آپلود فایل مستند
      operationId: uploadDocument
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [file]
              properties:
                file:
                  type: string
                  format: binary
                  description: فایل مستند (PDF, DOC, DOCX - حداکثر 50MB)
                category:
                  type: string
                  enum: [certificate, manual, report, other]
                  default: other
      responses:
        '200':
          description: مستند آپلود شد
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'

  # =============================================================================
  # Geography APIs
  # =============================================================================
  /geography/provinces:
    get:
      tags: [Geography]
      summary: لیست استان‌ها
      description: دریافت لیست استان‌های ایران
      operationId: getProvinces
      responses:
        '200':
          description: لیست استان‌ها
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Province'

  /geography/provinces/{provinceId}/cities:
    get:
      tags: [Geography]
      summary: لیست شهرهای استان
      description: دریافت لیست شهرهای یک استان
      operationId: getProvinceCities
      parameters:
        - name: provinceId
          in: path
          required: true
          schema:
            type: integer
            example: 8
      responses:
        '200':
          description: لیست شهرها
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'

# =============================================================================
# Components
# =============================================================================
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    Page:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
        default: 1
    Limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    Search:
      name: search
      in: query
      schema:
        type: string
        example: "جستجو"
    UserId:
      name: userId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    PartId:
      name: partId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    TransferId:
      name: transferId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    ElevatorId:
      name: elevatorId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    RequestId:
      name: requestId
      in: path
      required: true
      schema:
        type: string
        format: uuid

  responses:
    BadRequest:
      description: درخواست نامعتبر
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: عدم احراز هویت
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: عدم دسترسی
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: یافت نشد
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TooManyRequests:
      description: تعداد درخواست‌ها زیاد
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: خطای سرور
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    # Base schemas
    Error:
      type: object
      required: [success, message]
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "خطا در درخواست"
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

    PaginationMeta:
      type: object
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 20
        total:
          type: integer
          example: 150
        totalPages:
          type: integer
          example: 8
        hasNext:
          type: boolean
          example: true
        hasPrev:
          type: boolean
          example: false

    # User schemas
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        mobile:
          type: string
          example: "09123456789"
        firstName:
          type: string
          example: "علی"
        lastName:
          type: string
          example: "احمدی"
        email:
          type: string
          format: email
          example: "ali@example.com"
          nullable: true
        role:
          type: string
          enum: [admin, user]
          example: "user"
        status:
          type: string
          enum: [active, inactive, banned]
          example: "active"
        province:
          type: string
          example: "تهران"
        city:
          type: string
          example: "تهران"
        address:
          type: string
          example: "خیابان ولیعصر، پلاک 123"
          nullable: true
        nationalId:
          type: string
          example: "1234567890"
          nullable: true
        companyName:
          type: string
          example: "شرکت آسانسور سازان"
          nullable: true
        licenseNumber:
          type: string
          example: "LIC-12345"
          nullable: true
        avatarUrl:
          type: string
          format: uri
          example: "https://elevatorid.ieeu.ir/uploads/avatars/user123.jpg"
          nullable: true
        emailVerified:
          type: boolean
          example: false
        mobileVerified:
          type: boolean
          example: true
        lastLoginAt:
          type: string
          format: date-time
          example: "2024-03-15T10:30:00Z"
          nullable: true
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T09:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-03-15T10:30:00Z"

    CreateUserRequest:
      type: object
      required: [mobile, firstName, lastName, role]
      properties:
        mobile:
          type: string
          pattern: '^09[0-9]{9}$'
        firstName:
          type: string
          minLength: 2
        lastName:
          type: string
          minLength: 2
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin, user]
        province:
          type: string
        city:
          type: string
        address:
          type: string
        nationalId:
          type: string
          pattern: '^[0-9]{10}$'
        companyName:
          type: string
        licenseNumber:
          type: string

    UpdateUserRequest:
      type: object
      properties:
        firstName:
          type: string
          minLength: 2
        lastName:
          type: string
          minLength: 2
        email:
          type: string
          format: email
        province:
          type: string
        city:
          type: string
        address:
          type: string
        companyName:
          type: string
        licenseNumber:
          type: string
        status:
          type: string
          enum: [active, inactive, banned]

    UserProfile:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            preferences:
              type: object
              properties:
                language:
                  type: string
                  enum: [fa, en]
                  default: fa
                theme:
                  type: string
                  enum: [light, dark, auto]
                  default: light
                notifications:
                  type: object
                  properties:
                    email:
                      type: boolean
                      default: true
                    sms:
                      type: boolean
                      default: true
                    push:
                      type: boolean
                      default: true

    UpdateProfileRequest:
      type: object
      properties:
        firstName:
          type: string
          minLength: 2
        lastName:
          type: string
          minLength: 2
        email:
          type: string
          format: email
        province:
          type: string
        city:
          type: string
        address:
          type: string
        companyName:
          type: string
        preferences:
          type: object
          properties:
            language:
              type: string
              enum: [fa, en]
            theme:
              type: string
              enum: [light, dark, auto]
            notifications:
              type: object
              properties:
                email:
                  type: boolean
                sms:
                  type: boolean
                push:
                  type: boolean

    PaginatedUsers:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    # Part schemas
    Part:
      type: object
      required: [id, name, serialNumber, categoryId, ownerId, status]
      properties:
        id:
          type: string
          format: uuid
          description: "شناسه منحصر به فرد قطعه"
          example: "550e8400-e29b-41d4-a716-446655440001"
        name:
          type: string
          description: "نام فارسی قطعه"
          minLength: 3
          maxLength: 200
          example: "موتور آسانسور اتیس"
        nameEn:
          type: string
          description: "نام انگلیسی قطعه"
          maxLength: 200
          example: "Otis Elevator Motor"
          nullable: true
        description:
          type: string
          description: "توضیحات تکمیلی قطعه"
          maxLength: 1000
          example: "موتور آسانسور با قدرت 10 کیلووات مناسب برای ظرفیت 8 نفر"
          nullable: true
        # Category Information
        categoryId:
          type: string
          format: uuid
          description: "شناسه دسته‌بندی قطعه"
          example: "123e4567-e89b-12d3-a456-426614174000"
        category:
          $ref: '#/components/schemas/PartCategory'
          description: "اطلاعات کامل دسته‌بندی"
        # Basic Information
        brand:
          type: string
          description: "برند سازنده"
          maxLength: 100
          example: "اتیس"
        manufacturer:
          type: string
          description: "شرکت سازنده"
          maxLength: 200
          example: "شرکت اتیس ایران"
          nullable: true
        model:
          type: string
          description: "مدل قطعه"
          maxLength: 100
          example: "ATL-800"
          nullable: true
        serialNumber:
          type: string
          description: "شماره سریال منحصر به فرد"
          maxLength: 50
          example: "SN123456789"
        partNumber:
          type: string
          description: "شماره قطعه (Part Number)"
          maxLength: 50
          example: "PN-MOT-001"
          nullable: true
        qrCode:
          type: string
          description: "کد QR منحصر به فرد قطعه"
          example: "QR123456789"
          readOnly: true
        # Status and Condition
        status:
          type: string
          description: "وضعیت فعلی قطعه"
          enum: [available, sold, installed, defective, under_repair, reserved]
          example: "available"
        condition:
          type: string
          description: "شرایط فیزیکی قطعه"
          enum: [new, excellent, good, fair, poor, damaged]
          example: "new"
        # Dates
        manufacturingDate:
          type: string
          format: date
          description: "تاریخ تولید (شمسی)"
          example: "1402-05-15"
          nullable: true
        installationDate:
          type: string
          format: date
          description: "تاریخ نصب (در صورت نصب)"
          example: "1402-06-01"
          nullable: true
        expiryDate:
          type: string
          format: date
          description: "تاریخ انقضا یا مهلت مصرف"
          example: "1412-05-15"
          nullable: true
        lastMaintenanceDate:
          type: string
          format: date
          description: "تاریخ آخرین سرویس"
          example: "1403-01-15"
          nullable: true
        nextMaintenanceDate:
          type: string
          format: date
          description: "تاریخ سرویس بعدی"
          example: "1403-07-15"
          nullable: true
        # Pricing
        purchasePrice:
          type: number
          format: decimal
          description: "قیمت خرید اولیه (ریال)"
          minimum: 0
          example: 15000000
          nullable: true
        currentPrice:
          type: number
          format: decimal
          description: "قیمت فعلی یا قیمت فروش (ریال)"
          minimum: 0
          example: 18000000
          nullable: true
        pricePerUnit:
          type: number
          format: decimal
          description: "قیمت هر واحد (ریال)"
          minimum: 0
          example: 18000000
          nullable: true
        currency:
          type: string
          description: "واحد پولی"
          enum: [IRR, USD, EUR]
          default: "IRR"
          example: "IRR"
        # Physical Properties
        weight:
          type: number
          format: decimal
          description: "وزن (کیلوگرم)"
          minimum: 0
          example: 50.5
          nullable: true
        dimensions:
          type: object
          description: "ابعاد قطعه"
          properties:
            length:
              type: number
              format: decimal
              description: "طول (سانتی‌متر)"
              minimum: 0
              example: 80.5
            width:
              type: number
              format: decimal
              description: "عرض (سانتی‌متر)"
              minimum: 0
              example: 60.0
            height:
              type: number
              format: decimal
              description: "ارتفاع (سانتی‌متر)"
              minimum: 0
              example: 120.0
            unit:
              type: string
              description: "واحد اندازه‌گیری"
              enum: [cm, m, mm]
              default: "cm"
          nullable: true
        # Technical Specifications
        specifications:
          type: array
          description: "مشخصات فنی قطعه"
          items:
            type: object
            required: [name, value]
            properties:
              name:
                type: string
                description: "نام مشخصه فنی"
                example: "قدرت"
              nameEn:
                type: string
                description: "نام انگلیسی مشخصه"
                example: "Power"
                nullable: true
              value:
                type: string
                description: "مقدار مشخصه"
                example: "10"
              unit:
                type: string
                description: "واحد اندازه‌گیری"
                example: "کیلووات"
                nullable: true
              type:
                type: string
                description: "نوع داده"
                enum: [text, number, boolean, date]
                default: "text"
              isRequired:
                type: boolean
                description: "آیا این مشخصه الزامی است"
                default: false
        # Media and Documents
        images:
          type: array
          description: "تصاویر قطعه"
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              url:
                type: string
                format: uri
                example: "https://elevatorid.ieeu.ir/uploads/parts/image1.jpg"
              title:
                type: string
                example: "تصویر جلو"
              description:
                type: string
                example: "نمای جلوی قطعه"
                nullable: true
              isMain:
                type: boolean
                description: "آیا تصویر اصلی است"
                default: false
              uploadedAt:
                type: string
                format: date-time
        documents:
          type: array
          description: "مستندات قطعه"
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
                example: "راهنمای نصب"
              url:
                type: string
                format: uri
                example: "https://elevatorid.ieeu.ir/uploads/docs/manual.pdf"
              type:
                type: string
                enum: [manual, certificate, warranty, datasheet, installation_guide, other]
                example: "manual"
              size:
                type: integer
                description: "حجم فایل (بایت)"
                example: 2048576
              mimeType:
                type: string
                example: "application/pdf"
              uploadedAt:
                type: string
                format: date-time
        # Ownership and Location
        ownerId:
          type: string
          format: uuid
          description: "شناسه مالک قطعه"
          example: "456e7890-e89b-12d3-a456-426614174001"
        owner:
          $ref: '#/components/schemas/User'
          description: "اطلاعات مالک"
        location:
          type: object
          description: "موقعیت قطعه"
          properties:
            type:
              type: string
              enum: [warehouse, installation_site, service_center, in_transit]
              example: "warehouse"
              default: "warehouse"
            warehouse:
              type: string
              description: "نام انبار"
              example: "انبار مرکزی تهران"
              nullable: true
            shelf:
              type: string
              description: "مشخصات قفسه"
              example: "قفسه A-12-03"
              nullable: true
            building:
              type: string
              description: "نام ساختمان (در صورت نصب)"
              example: "برج تجاری پارس"
              nullable: true
            address:
              type: string
              description: "آدرس دقیق"
              example: "تهران، خیابان ولیعصر، پلاک 123"
              nullable: true
            province:
              type: string
              description: "استان"
              example: "تهران"
              nullable: true
            city:
              type: string
              description: "شهر"
              example: "تهران"
              nullable: true
            coordinates:
              type: object
              description: "مختصات جغرافیایی"
              properties:
                latitude:
                  type: number
                  format: decimal
                  example: 35.6892
                longitude:
                  type: number
                  format: decimal
                  example: 51.3890
              nullable: true
            notes:
              type: string
              description: "یادداشت‌های اضافی"
              example: "در قسمت قطعات فوری نگهداری شود"
              nullable: true
        # Warranty Information
        warranty:
          type: object
          description: "اطلاعات گارانتی"
          properties:
            hasWarranty:
              type: boolean
              description: "آیا گارانتی دارد"
              default: false
            warrantyPeriod:
              type: integer
              description: "مدت گارانتی (ماه)"
              minimum: 1
              maximum: 120
              example: 24
              nullable: true
            warrantyProvider:
              type: string
              description: "ارائه دهنده گارانتی"
              example: "شرکت اتیس ایران"
              nullable: true
            warrantyStartDate:
              type: string
              format: date
              description: "تاریخ شروع گارانتی"
              example: "1402-05-15"
              nullable: true
            warrantyEndDate:
              type: string
              format: date
              description: "تاریخ پایان گارانتی"
              example: "1404-05-15"
              nullable: true
            warrantyTerms:
              type: string
              description: "شرایط گارانتی"
              example: "گارانتی شامل قطعات و کارکرد می‌باشد"
              nullable: true
            warrantyDocument:
              type: string
              format: uri
              description: "سند گارانتی"
              nullable: true
          nullable: true
        # Lifecycle and Maintenance
        lifecycleStage:
          type: string
          description: "مرحله چرخه حیات"
          enum: [new, active, maintenance_required, end_of_life, disposed]
          example: "active"
          default: "new"
        maintenanceSchedule:
          type: object
          description: "برنامه سرویس"
          properties:
            intervalMonths:
              type: integer
              description: "فاصله سرویس (ماه)"
              minimum: 1
              example: 6
            lastServiceType:
              type: string
              enum: [inspection, preventive, corrective, overhaul]
              example: "preventive"
              nullable: true
            nextServiceType:
              type: string
              enum: [inspection, preventive, corrective, overhaul]
              example: "inspection"
              nullable: true
            serviceProvider:
              type: string
              description: "ارائه دهنده سرویس"
              example: "شرکت نگهداری آسانسور"
              nullable: true
          nullable: true
        # Additional Properties
        tags:
          type: array
          description: "برچسب‌های قطعه"
          items:
            type: string
          example: ["اولویت_بالا", "کریتیکال", "وارداتی"]
        notes:
          type: string
          description: "یادداشت‌های اضافی"
          maxLength: 2000
          example: "این قطعه برای آسانسورهای بالای 10 طبقه مناسب است"
          nullable: true
        isActive:
          type: boolean
          description: "آیا قطعه فعال است"
          default: true
        # Timestamps
        createdAt:
          type: string
          format: date-time
          description: "تاریخ ایجاد"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: "تاریخ آخرین ویرایش"
          readOnly: true
        createdBy:
          type: string
          format: uuid
          description: "شناسه کاربر ایجادکننده"
          readOnly: true
        updatedBy:
          type: string
          format: uuid
          description: "شناسه کاربر آخرین ویرایش"
          readOnly: true
          nullable: true

    PartCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: "موتور آسانسور"
        nameEn:
          type: string
          example: "Elevator Motor"
        description:
          type: string
          example: "موتورهای مختلف آسانسور"
        parentId:
          type: string
          format: uuid
          nullable: true
        level:
          type: integer
          example: 1
        specifications:
          type: array
          items:
            $ref: '#/components/schemas/SpecificationDefinition'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    SpecificationDefinition:
      type: object
      properties:
        name:
          type: string
          example: "قدرت"
        nameEn:
          type: string
          example: "Power"
        type:
          type: string
          enum: [text, number, boolean, select, multiselect]
          example: "number"
        unit:
          type: string
          example: "کیلووات"
          nullable: true
        required:
          type: boolean
          default: false
        options:
          type: array
          items:
            type: string
          nullable: true

    CreatePartRequest:
      type: object
      required: [name, categoryId, serialNumber, status]
      properties:
        # Basic Information
        name:
          type: string
          description: "نام فارسی قطعه"
          minLength: 3
          maxLength: 200
          example: "موتور آسانسور اتیس"
        nameEn:
          type: string
          description: "نام انگلیسی قطعه"
          maxLength: 200
          example: "Otis Elevator Motor"
        description:
          type: string
          description: "توضیحات تکمیلی"
          maxLength: 1000
          example: "موتور آسانسور با قدرت 10 کیلووات"
        # Category
        categoryId:
          type: string
          format: uuid
          description: "شناسه دسته‌بندی (الزامی)"
          example: "123e4567-e89b-12d3-a456-426614174000"
        # Identification
        brand:
          type: string
          description: "برند سازنده"
          maxLength: 100
          example: "اتیس"
        manufacturer:
          type: string
          description: "شرکت سازنده"
          maxLength: 200
          example: "شرکت اتیس ایران"
        model:
          type: string
          description: "مدل قطعه"
          maxLength: 100
          example: "ATL-800"
        serialNumber:
          type: string
          description: "شماره سریال منحصر به فرد (الزامی)"
          maxLength: 50
          example: "SN123456789"
        partNumber:
          type: string
          description: "شماره قطعه"
          maxLength: 50
          example: "PN-MOT-001"
        # Status
        status:
          type: string
          description: "وضعیت اولیه قطعه (الزامی)"
          enum: [available, installed, reserved]
          default: "available"
          example: "available"
        condition:
          type: string
          description: "شرایط فیزیکی قطعه"
          enum: [new, excellent, good, fair, poor]
          default: "new"
          example: "new"
        # Dates
        manufacturingDate:
          type: string
          format: date
          description: "تاریخ تولید (شمسی)"
          example: "1402-05-15"
        installationDate:
          type: string
          format: date
          description: "تاریخ نصب (در صورت وجود)"
          example: "1402-06-01"
        expiryDate:
          type: string
          format: date
          description: "تاریخ انقضا"
          example: "1412-05-15"
        # Pricing
        purchasePrice:
          type: number
          format: decimal
          description: "قیمت خرید (ریال)"
          minimum: 0
          example: 15000000
        currentPrice:
          type: number
          format: decimal
          description: "قیمت فعلی (ریال)"
          minimum: 0
          example: 18000000
        pricePerUnit:
          type: number
          format: decimal
          description: "قیمت هر واحد (ریال)"
          minimum: 0
          example: 18000000
        currency:
          type: string
          description: "واحد پولی"
          enum: [IRR, USD, EUR]
          default: "IRR"
        # Physical Properties
        weight:
          type: number
          format: decimal
          description: "وزن (کیلوگرم)"
          minimum: 0
          example: 50.5
        dimensions:
          type: object
          description: "ابعاد قطعه"
          properties:
            length:
              type: number
              format: decimal
              description: "طول (سانتی‌متر)"
              minimum: 0
              example: 80.5
            width:
              type: number
              format: decimal
              description: "عرض (سانتی‌متر)"
              minimum: 0
              example: 60.0
            height:
              type: number
              format: decimal
              description: "ارتفاع (سانتی‌متر)"
              minimum: 0
              example: 120.0
            unit:
              type: string
              enum: [cm, m, mm]
              default: "cm"
        # Technical Specifications
        specifications:
          type: array
          description: "مشخصات فنی"
          items:
            type: object
            required: [name, value]
            properties:
              name:
                type: string
                description: "نام مشخصه"
                example: "قدرت"
              nameEn:
                type: string
                description: "نام انگلیسی"
                example: "Power"
              value:
                type: string
                description: "مقدار"
                example: "10"
              unit:
                type: string
                description: "واحد"
                example: "کیلووات"
              type:
                type: string
                enum: [text, number, boolean, date]
                default: "text"
        # Location
        location:
          type: object
          description: "موقعیت قطعه"
          properties:
            type:
              type: string
              enum: [warehouse, installation_site, service_center]
              default: "warehouse"
            warehouse:
              type: string
              description: "نام انبار"
              example: "انبار مرکزی تهران"
            shelf:
              type: string
              description: "قفسه"
              example: "قفسه A-12-03"
            building:
              type: string
              description: "نام ساختمان"
              example: "برج تجاری پارس"
            address:
              type: string
              description: "آدرس"
              example: "تهران، خیابان ولیعصر"
            province:
              type: string
              description: "استان"
              example: "تهران"
            city:
              type: string
              description: "شهر"
              example: "تهران"
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                  format: decimal
                longitude:
                  type: number
                  format: decimal
            notes:
              type: string
              description: "یادداشت‌ها"
              example: "در بخش قطعات اضطراری"
        # Warranty
        warranty:
          type: object
          description: "اطلاعات گارانتی"
          properties:
            hasWarranty:
              type: boolean
              description: "آیا گارانتی دارد"
              default: false
            warrantyPeriod:
              type: integer
              description: "مدت گارانتی (ماه)"
              minimum: 1
              maximum: 120
              example: 24
            warrantyProvider:
              type: string
              description: "ارائه دهنده گارانتی"
              example: "شرکت اتیس ایران"
            warrantyStartDate:
              type: string
              format: date
              description: "تاریخ شروع گارانتی"
              example: "1402-05-15"
            warrantyTerms:
              type: string
              description: "شرایط گارانتی"
              example: "گارانتی شامل قطعات و کارکرد"
        # Maintenance
        maintenanceSchedule:
          type: object
          description: "برنامه سرویس"
          properties:
            intervalMonths:
              type: integer
              description: "فاصله سرویس (ماه)"
              minimum: 1
              example: 6
            serviceProvider:
              type: string
              description: "ارائه دهنده سرویس"
              example: "شرکت نگهداری"
        # Additional
        tags:
          type: array
          description: "برچسب‌ها"
          items:
            type: string
          example: ["اولویت_بالا", "وارداتی"]
        notes:
          type: string
          description: "یادداشت‌های اضافی"
          maxLength: 2000
          example: "مناسب آسانسورهای بالای 10 طبقه"
        # Import Information
        productType:
          type: string
          description: "نوع قطعه از نظر منشاء"
          enum: [manufactured, imported]
          default: "manufactured"
          example: "manufactured"
        manufacturerCountry:
          type: string
          description: "کشور سازنده"
          example: "ایران"
        originCountry:
          type: string
          description: "کشور مبدأ (برای وارداتی)"
          example: "آلمان"
        customsClearanceDocument:
          type: string
          format: uri
          description: "سند ترخیص گمرکی (برای وارداتی)"
          example: "https://elevatorid.ieeu.ir/uploads/customs/clearance.pdf"

    UpdatePartRequest:
      type: object
      description: "درخواست ویرایش قطعه - تمام فیلدها اختیاری هستند"
      properties:
        # Basic Information
        name:
          type: string
          description: "نام فارسی قطعه"
          minLength: 3
          maxLength: 200
          example: "موتور آسانسور اتیس بهبود یافته"
        nameEn:
          type: string
          description: "نام انگلیسی قطعه"
          maxLength: 200
          example: "Otis Elevator Motor Enhanced"
        description:
          type: string
          description: "توضیحات تکمیلی"
          maxLength: 1000
          example: "موتور آسانسور با قدرت بالا و مصرف کم"
        # Identification
        brand:
          type: string
          description: "برند سازنده"
          maxLength: 100
          example: "اتیس"
        manufacturer:
          type: string
          description: "شرکت سازنده"
          maxLength: 200
          example: "شرکت اتیس بین‌الملل"
        model:
          type: string
          description: "مدل قطعه"
          maxLength: 100
          example: "ATL-800-V2"
        partNumber:
          type: string
          description: "شماره قطعه"
          maxLength: 50
          example: "PN-MOT-001-V2"
        # Status (Cannot change serialNumber after creation)
        status:
          type: string
          description: "وضعیت قطعه"
          enum: [available, sold, installed, defective, under_repair, reserved]
          example: "available"
        condition:
          type: string
          description: "شرایط فیزیکی"
          enum: [new, excellent, good, fair, poor, damaged]
          example: "good"
        # Dates
        installationDate:
          type: string
          format: date
          description: "تاریخ نصب"
          example: "1402-06-01"
        expiryDate:
          type: string
          format: date
          description: "تاریخ انقضا"
          example: "1412-05-15"
        lastMaintenanceDate:
          type: string
          format: date
          description: "تاریخ آخرین سرویس"
          example: "1403-01-15"
        nextMaintenanceDate:
          type: string
          format: date
          description: "تاریخ سرویس بعدی"
          example: "1403-07-15"
        # Pricing
        currentPrice:
          type: number
          format: decimal
          description: "قیمت فعلی (ریال)"
          minimum: 0
          example: 20000000
        pricePerUnit:
          type: number
          format: decimal
          description: "قیمت هر واحد (ریال)"
          minimum: 0
          example: 20000000
        currency:
          type: string
          description: "واحد پولی"
          enum: [IRR, USD, EUR]
          example: "IRR"
        # Physical Properties
        weight:
          type: number
          format: decimal
          description: "وزن (کیلوگرم)"
          minimum: 0
          example: 52.0
        dimensions:
          type: object
          description: "ابعاد قطعه"
          properties:
            length:
              type: number
              format: decimal
              description: "طول (سانتی‌متر)"
              minimum: 0
              example: 82.0
            width:
              type: number
              format: decimal
              description: "عرض (سانتی‌متر)"
              minimum: 0
              example: 61.0
            height:
              type: number
              format: decimal
              description: "ارتفاع (سانتی‌متر)"
              minimum: 0
              example: 122.0
            unit:
              type: string
              enum: [cm, m, mm]
              example: "cm"
        # Technical Specifications
        specifications:
          type: array
          description: "مشخصات فنی جدید (جایگزین کامل)"
          items:
            type: object
            required: [name, value]
            properties:
              name:
                type: string
                description: "نام مشخصه"
                example: "قدرت"
              nameEn:
                type: string
                description: "نام انگلیسی"
                example: "Power"
              value:
                type: string
                description: "مقدار"
                example: "12"
              unit:
                type: string
                description: "واحد"
                example: "کیلووات"
              type:
                type: string
                enum: [text, number, boolean, date]
                default: "text"
              isRequired:
                type: boolean
                default: false
        # Location
        location:
          type: object
          description: "موقعیت جدید قطعه"
          properties:
            type:
              type: string
              enum: [warehouse, installation_site, service_center, in_transit]
              example: "installation_site"
            warehouse:
              type: string
              description: "نام انبار"
              example: "انبار شعبه شمال"
            shelf:
              type: string
              description: "قفسه"
              example: "قفسه B-15-02"
            building:
              type: string
              description: "نام ساختمان"
              example: "برج تجاری آزادی"
            address:
              type: string
              description: "آدرس"
              example: "تهران، میدان آزادی"
            province:
              type: string
              description: "استان"
              example: "تهران"
            city:
              type: string
              description: "شهر"
              example: "تهران"
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                  format: decimal
                  example: 35.6992
                longitude:
                  type: number
                  format: decimal
                  example: 51.3390
            notes:
              type: string
              description: "یادداشت‌ها"
              example: "منتقل شده به محل نصب"
        # Warranty
        warranty:
          type: object
          description: "بروزرسانی اطلاعات گارانتی"
          properties:
            hasWarranty:
              type: boolean
              description: "آیا گارانتی دارد"
            warrantyPeriod:
              type: integer
              description: "مدت گارانتی (ماه)"
              minimum: 1
              maximum: 120
              example: 18
            warrantyProvider:
              type: string
              description: "ارائه دهنده گارانتی"
              example: "شرکت اتیس ایران پلاس"
            warrantyStartDate:
              type: string
              format: date
              description: "تاریخ شروع گارانتی"
              example: "1402-06-01"
            warrantyEndDate:
              type: string
              format: date
              description: "تاریخ پایان گارانتی"
              example: "1404-12-01"
            warrantyTerms:
              type: string
              description: "شرایط گارانتی"
              example: "گارانتی شامل قطعات، کارکرد و سرویس"
        # Maintenance
        maintenanceSchedule:
          type: object
          description: "بروزرسانی برنامه سرویس"
          properties:
            intervalMonths:
              type: integer
              description: "فاصله سرویس (ماه)"
              minimum: 1
              example: 4
            lastServiceType:
              type: string
              enum: [inspection, preventive, corrective, overhaul]
              example: "preventive"
            nextServiceType:
              type: string
              enum: [inspection, preventive, corrective, overhaul]
              example: "inspection"
            serviceProvider:
              type: string
              description: "ارائه دهنده سرویس"
              example: "شرکت نگهداری پیشرفته"
        # Lifecycle
        lifecycleStage:
          type: string
          description: "مرحله چرخه حیات"
          enum: [new, active, maintenance_required, end_of_life, disposed]
          example: "active"
        # Additional Properties
        tags:
          type: array
          description: "برچسب‌های جدید (جایگزین کامل)"
          items:
            type: string
          example: ["اولویت_متوسط", "نصب_شده", "تست_شده"]
        notes:
          type: string
          description: "یادداشت‌های اضافی"
          maxLength: 2000
          example: "قطعه با موفقیت نصب و تست شده"
        isActive:
          type: boolean
          description: "وضعیت فعال/غیرفعال"
          example: true
        # Transfer ownership (if needed)
        newOwnerId:
          type: string
          format: uuid
          description: "شناسه مالک جدید (در صورت انتقال مالکیت)"
          example: "789e0123-e89b-12d3-a456-426614174002"

    PaginatedParts:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    # Transfer schemas
    Transfer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        part:
          $ref: '#/components/schemas/Part'
        fromUser:
          $ref: '#/components/schemas/User'
        toUser:
          $ref: '#/components/schemas/User'
        transferType:
          type: string
          enum: [sale, gift, replacement]
        status:
          type: string
          enum: [pending, approved, rejected, completed]
        price:
          type: number
          format: decimal
          nullable: true
        description:
          type: string
          nullable: true
        transferDate:
          type: string
          format: date-time
        approvedBy:
          $ref: '#/components/schemas/User'
          nullable: true
        approvedAt:
          type: string
          format: date-time
          nullable: true
        rejectionReason:
          type: string
          nullable: true
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
                format: uri
              type:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    PaginatedTransfers:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    # Elevator schemas
    Elevator:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: "آسانسور ساختمان تجاری پارک"
        type:
          type: string
          enum: [passenger, freight, residential, commercial]
        status:
          type: string
          enum: [active, inactive, under_maintenance]
        capacity:
          type: integer
          example: 8
        maxWeight:
          type: number
          format: decimal
          example: 630
        floors:
          type: integer
          example: 10
        speed:
          type: number
          format: decimal
          example: 1.5
        installationDate:
          type: string
          format: date
        lastMaintenanceDate:
          type: string
          format: date
          nullable: true
        nextMaintenanceDate:
          type: string
          format: date
          nullable: true
        manufacturer:
          type: string
          example: "اتیس"
        model:
          type: string
          example: "Gen2"
        serialNumber:
          type: string
          example: "ELV123456789"
        certificateNumber:
          type: string
          example: "CERT-12345"
          nullable: true
        location:
          type: object
          properties:
            province:
              type: string
            city:
              type: string
            address:
              type: string
            buildingName:
              type: string
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                  format: decimal
                longitude:
                  type: number
                  format: decimal
              nullable: true
        owner:
          $ref: '#/components/schemas/User'
        installer:
          type: object
          properties:
            companyName:
              type: string
            licenseNumber:
              type: string
            contactInfo:
              type: object
              properties:
                phone:
                  type: string
                email:
                  type: string
          nullable: true
        specifications:
          type: object
          properties:
            controlSystem:
              type: string
            driveType:
              type: string
            doorType:
              type: string
            cabinMaterial:
              type: string
            emergencyFeatures:
              type: array
              items:
                type: string
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
                format: uri
              type:
                type: string
                enum: [installation_permit, operation_permit, insurance, manual, other]
        images:
          type: array
          items:
            type: string
            format: uri
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateElevatorRequest:
      type: object
      required: [name, type, capacity, maxWeight, floors, manufacturer, serialNumber, province, city, address]
      properties:
        name:
          type: string
          minLength: 3
        type:
          type: string
          enum: [passenger, freight, residential, commercial]
        capacity:
          type: integer
          minimum: 1
        maxWeight:
          type: number
          format: decimal
          minimum: 0
        floors:
          type: integer
          minimum: 2
        speed:
          type: number
          format: decimal
        installationDate:
          type: string
          format: date
        manufacturer:
          type: string
        model:
          type: string
        serialNumber:
          type: string
        province:
          type: string
        city:
          type: string
        address:
          type: string
        buildingName:
          type: string
        coordinates:
          type: object
          properties:
            latitude:
              type: number
              format: decimal
            longitude:
              type: number
              format: decimal
        installer:
          type: object
          properties:
            companyName:
              type: string
            licenseNumber:
              type: string
            contactInfo:
              type: object
              properties:
                phone:
                  type: string
                email:
                  type: string
        specifications:
          type: object
          properties:
            controlSystem:
              type: string
            driveType:
              type: string
            doorType:
              type: string
            cabinMaterial:
              type: string
            emergencyFeatures:
              type: array
              items:
                type: string

    UpdateElevatorRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 3
        status:
          type: string
          enum: [active, inactive, under_maintenance]
        lastMaintenanceDate:
          type: string
          format: date
        nextMaintenanceDate:
          type: string
          format: date
        certificateNumber:
          type: string
        address:
          type: string
        buildingName:
          type: string
        coordinates:
          type: object
          properties:
            latitude:
              type: number
              format: decimal
            longitude:
              type: number
              format: decimal
        installer:
          type: object
          properties:
            companyName:
              type: string
            licenseNumber:
              type: string
            contactInfo:
              type: object
              properties:
                phone:
                  type: string
                email:
                  type: string
        specifications:
          type: object
          properties:
            controlSystem:
              type: string
            driveType:
              type: string
            doorType:
              type: string
            cabinMaterial:
              type: string
            emergencyFeatures:
              type: array
              items:
                type: string

    ElevatorPart:
      type: object
      properties:
        id:
          type: string
          format: uuid
        elevator:
          $ref: '#/components/schemas/Elevator'
        part:
          $ref: '#/components/schemas/Part'
        installationDate:
          type: string
          format: date
        removalDate:
          type: string
          format: date
          nullable: true
        status:
          type: string
          enum: [installed, removed, replaced]
        installedBy:
          type: string
        notes:
          type: string
          nullable: true
        warrantyInfo:
          type: object
          properties:
            hasWarranty:
              type: boolean
            warrantyPeriod:
              type: integer
            warrantyExpiry:
              type: string
              format: date
        maintenanceHistory:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              type:
                type: string
                enum: [inspection, repair, replacement]
              description:
                type: string
              performedBy:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ElevatorCertificate:
      type: object
      properties:
        elevator:
          $ref: '#/components/schemas/Elevator'
        certificateNumber:
          type: string
        issueDate:
          type: string
          format: date
        expiryDate:
          type: string
          format: date
        issuedBy:
          type: string
        certificateType:
          type: string
          enum: [installation, operation, safety]
        qrCode:
          type: string
        verificationUrl:
          type: string
          format: uri
        installedParts:
          type: array
          items:
            $ref: '#/components/schemas/ElevatorPart'
        inspections:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              inspector:
                type: string
              result:
                type: string
                enum: [passed, failed, conditional]
              notes:
                type: string
        generatedAt:
          type: string
          format: date-time

    PaginatedElevators:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Elevator'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    # Request schemas
    Request:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: "مشکل در عملکرد آسانسور"
        description:
          type: string
          example: "آسانسور صدای غیرطبیعی تولید می‌کند"
        type:
          type: string
          enum: [complaint, suggestion, technical_support, general]
        status:
          type: string
          enum: [pending, in_progress, resolved, closed]
        priority:
          type: string
          enum: [low, medium, high, urgent]
        category:
          type: string
          example: "فنی"
        relatedElevator:
          $ref: '#/components/schemas/Elevator'
          nullable: true
        relatedPart:
          $ref: '#/components/schemas/Part'
          nullable: true
        requester:
          $ref: '#/components/schemas/User'
        assignedTo:
          $ref: '#/components/schemas/User'
          nullable: true
        attachments:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
                format: uri
              type:
                type: string
        responses:
          type: array
          items:
            $ref: '#/components/schemas/RequestResponse'
        tags:
          type: array
          items:
            type: string
        dueDate:
          type: string
          format: date
          nullable: true
        resolvedAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    RequestResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
        author:
          $ref: '#/components/schemas/User'
        isInternal:
          type: boolean
          default: false
        attachments:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              url:
                type: string
                format: uri
        createdAt:
          type: string
          format: date-time

    CreateRequestRequest:
      type: object
      required: [title, description, type]
      properties:
        title:
          type: string
          minLength: 5
        description:
          type: string
          minLength: 10
        type:
          type: string
          enum: [complaint, suggestion, technical_support, general]
        priority:
          type: string
          enum: [low, medium, high, urgent]
          default: medium
        category:
          type: string
        relatedElevatorId:
          type: string
          format: uuid
        relatedPartId:
          type: string
          format: uuid
        tags:
          type: array
          items:
            type: string
        dueDate:
          type: string
          format: date

    UpdateRequestRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 5
        description:
          type: string
          minLength: 10
        status:
          type: string
          enum: [pending, in_progress, resolved, closed]
        priority:
          type: string
          enum: [low, medium, high, urgent]
        category:
          type: string
        assignedToId:
          type: string
          format: uuid
        tags:
          type: array
          items:
            type: string
        dueDate:
          type: string
          format: date

    PaginatedRequests:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Request'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    # Report schemas
    PartsReport:
      type: object
      properties:
        summary:
          type: object
          properties:
            totalParts:
              type: integer
            availableParts:
              type: integer
            soldParts:
              type: integer
            defectiveParts:
              type: integer
            totalValue:
              type: number
              format: decimal
        byCategory:
          type: array
          items:
            type: object
            properties:
              category:
                type: string
              count:
                type: integer
              value:
                type: number
                format: decimal
        byBrand:
          type: array
          items:
            type: object
            properties:
              brand:
                type: string
              count:
                type: integer
              value:
                type: number
                format: decimal
        byStatus:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              count:
                type: integer
              percentage:
                type: number
                format: decimal
        timeline:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
              addedParts:
                type: integer
              soldParts:
                type: integer
              value:
                type: number
                format: decimal
        generatedAt:
          type: string
          format: date-time

    TransfersReport:
      type: object
      properties:
        summary:
          type: object
          properties:
            totalTransfers:
              type: integer
            completedTransfers:
              type: integer
            pendingTransfers:
              type: integer
            totalValue:
              type: number
              format: decimal
            averageTransferValue:
              type: number
              format: decimal
        byType:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              count:
                type: integer
              value:
                type: number
                format: decimal
        byStatus:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              count:
                type: integer
              percentage:
                type: number
                format: decimal
        timeline:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
              transfers:
                type: integer
              value:
                type: number
                format: decimal
        topUsers:
          type: array
          items:
            type: object
            properties:
              user:
                $ref: '#/components/schemas/User'
              transfersCount:
                type: integer
              totalValue:
                type: number
                format: decimal
        generatedAt:
          type: string
          format: date-time

    ElevatorsReport:
      type: object
      properties:
        summary:
          type: object
          properties:
            totalElevators:
              type: integer
            activeElevators:
              type: integer
            inactiveElevators:
              type: integer
            underMaintenanceElevators:
              type: integer
            averageAge:
              type: number
              format: decimal
        byType:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              count:
                type: integer
              percentage:
                type: number
                format: decimal
        byProvince:
          type: array
          items:
            type: object
            properties:
              province:
                type: string
              count:
                type: integer
              percentage:
                type: number
                format: decimal
        byManufacturer:
          type: array
          items:
            type: object
            properties:
              manufacturer:
                type: string
              count:
                type: integer
              averageAge:
                type: number
                format: decimal
        maintenanceSchedule:
          type: array
          items:
            type: object
            properties:
              month:
                type: string
              dueForMaintenance:
                type: integer
              overdue:
                type: integer
        generatedAt:
          type: string
          format: date-time

    FinancialReport:
      type: object
      properties:
        summary:
          type: object
          properties:
            totalRevenue:
              type: number
              format: decimal
            totalTransactions:
              type: integer
            averageTransactionValue:
              type: number
              format: decimal
            growthRate:
              type: number
              format: decimal
        revenue:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
              revenue:
                type: number
                format: decimal
              transactions:
                type: integer
        byCategory:
          type: array
          items:
            type: object
            properties:
              category:
                type: string
              revenue:
                type: number
                format: decimal
              percentage:
                type: number
                format: decimal
        topProducts:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
              revenue:
                type: number
                format: decimal
              sales:
                type: integer
        generatedAt:
          type: string
          format: date-time

    # System schemas
    SystemSettings:
      type: object
      properties:
        general:
          type: object
          properties:
            siteName:
              type: string
            siteUrl:
              type: string
            adminEmail:
              type: string
            supportPhone:
              type: string
            maintenanceMode:
              type: boolean
            registrationEnabled:
              type: boolean
        notifications:
          type: object
          properties:
            emailEnabled:
              type: boolean
            smsEnabled:
              type: boolean
            pushEnabled:
              type: boolean
            emailProvider:
              type: string
            smsProvider:
              type: string
        security:
          type: object
          properties:
            otpExpiry:
              type: integer
              description: "مدت اعتبار OTP به دقیقه"
            maxLoginAttempts:
              type: integer
            sessionTimeout:
              type: integer
              description: "مدت اعتبار نشست به دقیقه"
            requireEmailVerification:
              type: boolean
            requireMobileVerification:
              type: boolean
        uploads:
          type: object
          properties:
            maxFileSize:
              type: integer
              description: "حداکثر اندازه فایل به بایت"
            allowedImageTypes:
              type: array
              items:
                type: string
            allowedDocumentTypes:
              type: array
              items:
                type: string
        backup:
          type: object
          properties:
            autoBackup:
              type: boolean
            backupInterval:
              type: string
              enum: [daily, weekly, monthly]
            retentionDays:
              type: integer
        updatedAt:
          type: string
          format: date-time

    UpdateSettingsRequest:
      type: object
      properties:
        general:
          type: object
          properties:
            siteName:
              type: string
            siteUrl:
              type: string
            adminEmail:
              type: string
            supportPhone:
              type: string
            maintenanceMode:
              type: boolean
            registrationEnabled:
              type: boolean
        notifications:
          type: object
          properties:
            emailEnabled:
              type: boolean
            smsEnabled:
              type: boolean
            pushEnabled:
              type: boolean
            emailProvider:
              type: string
            smsProvider:
              type: string
        security:
          type: object
          properties:
            otpExpiry:
              type: integer
            maxLoginAttempts:
              type: integer
            sessionTimeout:
              type: integer
            requireEmailVerification:
              type: boolean
            requireMobileVerification:
              type: boolean
        uploads:
          type: object
          properties:
            maxFileSize:
              type: integer
            allowedImageTypes:
              type: array
              items:
                type: string
            allowedDocumentTypes:
              type: array
              items:
                type: string
        backup:
          type: object
          properties:
            autoBackup:
              type: boolean
            backupInterval:
              type: string
              enum: [daily, weekly, monthly]
            retentionDays:
              type: integer

    # Upload schemas
    UploadResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        file:
          type: object
          properties:
            id:
              type: string
              format: uuid
            originalName:
              type: string
            fileName:
              type: string
            url:
              type: string
              format: uri
            size:
              type: integer
            mimeType:
              type: string
            category:
              type: string
        uploadedAt:
          type: string
          format: date-time

    # Geography schemas
    Province:
      type: object
      properties:
        id:
          type: integer
          example: 8
        name:
          type: string
          example: "تهران"
        nameEn:
          type: string
          example: "Tehran"
        code:
          type: string
          example: "TEH"

    City:
      type: object
      properties:
        id:
          type: integer
          example: 301
        name:
          type: string
          example: "تهران"
        nameEn:
          type: string
          example: "Tehran"
        provinceId:
          type: integer
          example: 8

    # Activity schema
    Activity:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [user_registered, part_added, transfer_completed, elevator_added, request_submitted]
        description:
          type: string
        user:
          $ref: '#/components/schemas/User'
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time