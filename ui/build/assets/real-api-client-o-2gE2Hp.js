import{a4 as c,a5 as i}from"./index-tH8kGzNV.js";const p=()=>i.getConfig().fullURL,t=c.create({baseURL:p(),timeout:15e3,headers:{"Content-Type":"application/json"}});i.subscribe(e=>{t.defaults.baseURL=e.fullURL,console.log("✅ API Base URL updated:",e.fullURL)});const u=()=>({accessToken:localStorage.getItem("accessToken"),refreshToken:localStorage.getItem("refreshToken")});t.interceptors.request.use(e=>{const{accessToken:r}=u();return r&&r!=="mock-access-token"&&(e.headers.Authorization=`Bearer ${r}`),e},e=>Promise.reject(e));t.interceptors.response.use(e=>e,async e=>{const r=e.config,{refreshToken:s}=u();if(e.response?.status===401&&s&&s!=="mock-refresh-token"&&r)try{const o=await c.post(`${API_BASE_URL}/auth/refresh`,{},{headers:{Authorization:`Bearer ${s}`}}),{accessToken:n,refreshToken:l}=o.data;return localStorage.setItem("accessToken",n),localStorage.setItem("refreshToken",l),r.headers.Authorization=`Bearer ${n}`,t(r)}catch(o){return localStorage.removeItem("accessToken"),localStorage.removeItem("refreshToken"),Promise.reject(o)}return Promise.reject(e)});const a=e=>{if(!e.response)return{isNetworkError:!0,isAuthError:!1,isServerError:!1,message:"عدم دسترسی به سرور. لطفاً اتصال اینترنت خود را بررسی کنید.",details:e.message};const r=e.response.status;return r===401||r===403?{isNetworkError:!1,isAuthError:!0,isServerError:!1,message:"خطای احراز هویت. لطفاً مجدداً وارد شوید.",statusCode:r,details:e.response.data}:r>=500?{isNetworkError:!1,isAuthError:!1,isServerError:!0,message:"خطای سرور. لطفاً دوباره تلاش کنید.",statusCode:r,details:e.response.data}:{isNetworkError:!1,isAuthError:!1,isServerError:!1,message:e.response.data?.message||e.response.data?.error||"خطا در درخواست",statusCode:r,details:e.response.data}},h={get:async function(e,r){try{return(await t.get(e,{params:r})).data}catch(s){throw a(s)}},post:async function(e,r){try{return(await t.post(e,r)).data}catch(s){throw a(s)}},put:async function(e,r){try{return(await t.put(e,r)).data}catch(s){throw a(s)}},delete:async function(e){try{return(await t.delete(e)).data}catch(r){throw a(r)}},upload:async function(e,r){try{return(await t.post(e,r,{headers:{"Content-Type":"multipart/form-data"}})).data}catch(s){throw a(s)}},checkApiStatus:async function(){try{return await t.get("/health",{timeout:5e3}),!0}catch{return!1}}};export{h as r};
